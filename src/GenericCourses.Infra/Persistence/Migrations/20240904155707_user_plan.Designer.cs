// <auto-generated />
using System;
using GenericCourses.Infra.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GenericCourses.Infra.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240904155707_user_plan")]
    partial class user_plan
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseProgress", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("courseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.Property<bool>("done")
                        .HasColumnType("boolean")
                        .HasColumnName("done");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_course_progresses");

                    b.HasIndex("courseId")
                        .HasDatabaseName("ix_course_progresses_course_id");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_course_progresses_user_id");

                    b.ToTable("course_progresses", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Admin", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_admins");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_admins_user_id");

                    b.ToTable("admins", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("f8318560-d792-4a23-acf7-a81aa5a6dfbd"),
                            userId = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72")
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.BlogPost", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("acesses")
                        .HasColumnType("integer")
                        .HasColumnName("acesses");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<Guid>("instructorId")
                        .HasColumnType("uuid")
                        .HasColumnName("instructor_id");

                    b.Property<string>("text")
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<string>("thumb")
                        .HasColumnType("text")
                        .HasColumnName("thumb");

                    b.Property<string>("title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("id")
                        .HasName("pk_blog_posts");

                    b.HasIndex("instructorId")
                        .HasDatabaseName("ix_blog_posts_instructor_id");

                    b.ToTable("blog_posts", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("a2f854ac-c94a-7583-0c51-f3166da59571"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 871, DateTimeKind.Local).AddTicks(9765),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Nihil dolores esse accusamus est repellendus maxime asperiores. Accusamus minima minima. Repudiandae porro sed quia tempore nobis ullam. Ut nihil nesciunt provident voluptas quam aliquam. Officiis rerum excepturi tenetur qui eum.\n\nDolorum qui numquam aut quia aut eveniet esse. Dolorem commodi quam velit qui unde quae. At enim odit odit rerum dolorem saepe eligendi dolore quibusdam.\n\nVoluptatum quae maiores dignissimos natus iusto iste ducimus et necessitatibus. Quos ipsum quos sed earum. Est in modi sit repellat at natus officia nihil accusantium. Unde dignissimos iusto officiis quasi vel et. Harum dolor error illo sit voluptatibus. Accusamus placeat qui cumque consequuntur porro adipisci.",
                            title = "Implementation"
                        },
                        new
                        {
                            id = new Guid("ea836b66-d80b-bc44-fb29-64f18390995c"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(610),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Nemo blanditiis commodi corporis illum quia itaque dolorem quia architecto. A aut repellat perspiciatis quasi quo. Quod minus minus temporibus ut asperiores sapiente voluptatum veniam.\n\nQui dicta amet occaecati repellat incidunt distinctio optio libero aliquam. Quidem voluptates in illum officia distinctio repudiandae cumque non. Velit necessitatibus iste ut necessitatibus dolores quia fugiat. Eos eius fugit deleniti pariatur nihil dolor tenetur. Architecto minus qui consectetur et et deleniti rem. Qui est quas.\n\nDebitis nulla reprehenderit laborum iure soluta. Nemo ducimus quae cumque officia. Adipisci in vitae dolor excepturi dicta quis sed.",
                            title = "Accounts"
                        },
                        new
                        {
                            id = new Guid("837a24e5-3685-b819-d179-1910241c89db"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(860),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Et possimus porro ipsum ea dolor. Expedita odio earum ducimus blanditiis molestiae. Omnis enim in repudiandae dolorem quibusdam autem laudantium. Rerum odio adipisci. Enim est id aut itaque. Consectetur eum consequatur quae quo consequatur.\n\nEos laborum ab odit et voluptatem et exercitationem optio ut. Molestiae quam iure. Voluptas officiis veniam maiores aut dolor voluptatum et. Praesentium tenetur quia ratione veniam totam quasi dolorem dolor quasi. Optio eveniet cum qui nihil sit sed velit.\n\nVoluptatem laborum quia quia magnam laudantium assumenda. Recusandae molestias a fugit maxime velit laudantium maxime molestias. Et occaecati est. Aspernatur nesciunt nesciunt et dolor consectetur earum vel. Consequatur quos quas velit.",
                            title = "Creative"
                        },
                        new
                        {
                            id = new Guid("ac6fa1f1-dccf-e3b4-62c8-842fbad7ed86"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(1146),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Quis iusto voluptas qui rerum non. Totam consequuntur incidunt architecto. Ea totam ipsam molestiae. Sunt similique provident aliquid aut. Magni non vitae qui consequatur nostrum.\n\nBeatae dolores est itaque consequatur saepe aperiam dolores est. Et doloribus quasi mollitia eaque. Voluptates et corporis dolorem vitae fuga voluptatibus. At velit incidunt voluptas. Minima et accusamus repellat. Facere ea rerum est nisi quae rerum sit.\n\nVel delectus repellendus. Animi architecto temporibus. Libero et quia. Hic hic esse voluptatibus. Sapiente itaque consectetur est aperiam repellat laborum assumenda neque. Dolore quam incidunt est quo dolor rerum.",
                            title = "Branding"
                        },
                        new
                        {
                            id = new Guid("07c50a6a-c7d1-1d89-84fa-1d57e9b23460"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(1372),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Impedit culpa non ea aperiam laborum. Debitis voluptas beatae ratione. Voluptas nihil aliquid officiis sunt quae repellendus maiores molestiae. Laudantium facere voluptatem est quibusdam veritatis. Repudiandae quibusdam qui aliquam eos officia officiis corrupti nesciunt. Dolore sed deserunt officia quae.\n\nAsperiores facilis ea modi dignissimos odit esse consequatur ut suscipit. Quod ex alias reiciendis officia sunt ratione earum quaerat quisquam. Voluptatem quia rem dolorem reiciendis. Ea dolores molestiae.\n\nLibero esse fuga impedit est alias dolores et aut fuga. Doloribus minus voluptas autem optio molestiae autem ut. Laudantium ea voluptatem ea cum in. Voluptatem veniam eligendi nostrum aut qui voluptas explicabo libero. Ipsum quia quisquam.",
                            title = "Optimization"
                        },
                        new
                        {
                            id = new Guid("13e3cee9-406f-115d-52a7-3faed6bd63f2"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(1622),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Nobis qui repellat commodi voluptatem dolor aliquam rerum quae. Vitae rem animi ea eos consequatur quam. Sed reprehenderit quod recusandae officia laboriosam voluptatum. Omnis expedita placeat quae.\n\nQuod molestias eius est natus neque dignissimos earum. Ut eum aut adipisci qui vitae natus sed iure. Qui dolor exercitationem iusto ducimus. Ducimus labore quod dolorem iste exercitationem iure pariatur. Voluptatum veniam harum omnis amet dolorem possimus amet neque qui.\n\nReiciendis deserunt et ab delectus rerum magnam. Reiciendis maxime dolores natus magni soluta. Cupiditate et et aut. Nulla animi aliquam et mollitia est corporis.",
                            title = "Intranet"
                        },
                        new
                        {
                            id = new Guid("563afaad-c07d-4003-3c62-981332004fdd"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(1821),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Cumque odio quia cum. Aut rerum facere voluptatum voluptate quae autem. Nesciunt est occaecati aut et est dicta.\n\nHic quaerat qui necessitatibus vitae. Ipsa qui vel delectus fugiat veniam maxime vel consequatur doloribus. Qui ullam sed minus adipisci ut consequuntur ut. Repellat aperiam sunt enim vel qui molestias libero asperiores. Temporibus in facere aliquam ea a accusamus. Quisquam odio quia in veritatis fugiat autem maxime consequatur rerum.\n\nMinus quibusdam accusantium. Corporis non et sunt quasi ipsum perspiciatis incidunt voluptatem nihil. Enim sed qui ipsum quibusdam id voluptatem aut adipisci. Quis excepturi veritatis omnis. Quo voluptatibus est. Blanditiis vero delectus veniam voluptatem aut voluptas nulla eius et.",
                            title = "Tactics"
                        },
                        new
                        {
                            id = new Guid("155443f7-b948-755e-ed1a-abeb63d9d795"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(2091),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Eum est asperiores fugiat vero omnis vel numquam. Et sunt quis dolor officiis non nulla exercitationem et quae. Enim totam et distinctio. Molestiae dolore assumenda minima. Assumenda culpa perspiciatis distinctio aspernatur quia. Et quos repellat temporibus sit fugit.\n\nEsse sed perspiciatis. Ullam excepturi eum quibusdam. Eligendi cumque voluptas culpa facilis tempora dolorum. Blanditiis earum facilis eveniet voluptas rerum. Qui cum ullam ipsum corrupti inventore totam expedita officiis esse. Aut et minima eum accusamus qui pariatur laboriosam debitis ab.\n\nLibero et officiis ex soluta distinctio. Nemo repellat aspernatur et quis quo iusto labore aut soluta. Blanditiis non nihil natus enim aut ipsam quia sit. Enim eos esse optio quasi in ut.",
                            title = "Optimization"
                        },
                        new
                        {
                            id = new Guid("568b5702-916f-1f83-f56f-64c9990e7e73"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(2343),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Veritatis saepe explicabo. Doloribus ipsa voluptas placeat non. Nihil itaque dolore et numquam. Voluptatum nihil quo fugit est ipsum.\n\nIure natus saepe deleniti nam doloribus quod fugiat incidunt quam. Accusantium optio eaque voluptates fuga deserunt tempora quas omnis. Perspiciatis laudantium nostrum dolor quo autem. Velit tempore et similique accusantium. Ut aut sint deserunt harum voluptates.\n\nUt voluptatem nesciunt. Beatae quas quae laboriosam. Adipisci autem aut natus cumque sed animi fugit sed. Aut laborum ullam.",
                            title = "Mobility"
                        },
                        new
                        {
                            id = new Guid("8af0c46f-6f4d-8af3-3823-d88cbd1a60a5"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(2532),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Quasi autem ducimus molestiae aspernatur aut sunt temporibus. Voluptate sint voluptas. Quasi totam nihil recusandae et quos est minima a. Eos adipisci quisquam. Rem quisquam saepe illo omnis.\n\nIpsam fuga quia sunt suscipit. Voluptatem doloremque qui ut amet alias dolor. Minima eius optio eligendi vel.\n\nMolestiae ipsum ut. Eligendi laudantium neque. Porro ea fugit. Odit et quia et harum incidunt nisi rerum ut.",
                            title = "Program"
                        },
                        new
                        {
                            id = new Guid("8a674c50-d80a-535a-4d99-e131834901af"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(2696),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Aut dolores corporis ipsa quis. Cupiditate atque officia nihil voluptatem. Dolorum ipsum vel deleniti quam maiores sed sed.\n\nAd ut eum qui enim esse eaque. Tempore quo sed qui incidunt et reprehenderit quos sunt sit. Quidem ut sit laboriosam est voluptatem ducimus.\n\nDoloremque excepturi alias. Est et alias reiciendis aliquam necessitatibus rerum sint sed ut. Minus voluptate animi a sapiente dolorem laborum et occaecati. Consequatur aut minima sequi. Quis at deleniti suscipit tenetur dolores error aut.",
                            title = "Creative"
                        },
                        new
                        {
                            id = new Guid("6320d256-b114-5975-5f1f-b0f2a6962142"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(2867),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Nostrum dolorum hic consequuntur voluptas. Rerum explicabo eos vel labore sit. Optio commodi nihil.\n\nVelit quibusdam ducimus impedit ipsa. Est molestiae quia qui nam unde dolorum odit ut qui. Distinctio doloribus cumque quis facere quae aut et.\n\nEligendi eos et rerum labore esse. Saepe aut delectus eum voluptas. Aut explicabo qui. Sint nihil necessitatibus rerum architecto et. Praesentium necessitatibus similique dolorem nihil voluptatum similique ea. Alias nulla mollitia excepturi et ex alias ratione.",
                            title = "Paradigm"
                        },
                        new
                        {
                            id = new Guid("5045c22a-a594-e4c0-b0d9-a76b25535ee8"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(3051),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Repudiandae sunt sunt eius aut iusto perspiciatis voluptas et a. Est molestias corporis voluptatum ut saepe. Reprehenderit laboriosam cupiditate et.\n\nEst harum aliquid. Excepturi dolor officia. Totam quia facilis quis in provident. Voluptas veniam minima sunt aut deserunt consequatur distinctio error delectus.\n\nUt dolorum quia. Voluptatem illo ducimus quo est molestias nihil. Porro porro nesciunt iste et laboriosam id voluptatem itaque aut. Ab occaecati doloribus est.",
                            title = "Identity"
                        },
                        new
                        {
                            id = new Guid("86ab8359-5841-92e7-8751-479e09610190"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(3204),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Optio mollitia est commodi. Quod ut quae suscipit ut dolor odio. Sint rerum eos enim ipsum. Et vero quisquam a laboriosam dolor odio. Fugiat quibusdam veritatis in dolorem deserunt delectus quia eum.\n\nExercitationem delectus minus reprehenderit tempora et velit. Deserunt distinctio voluptas culpa non perferendis molestiae repudiandae voluptates amet. Deserunt sint incidunt harum assumenda qui ipsam minima. Voluptatum dolores sunt minus numquam tenetur voluptatum velit expedita voluptatem.\n\nModi ad earum non qui delectus. Et necessitatibus quibusdam nihil eveniet dolores reprehenderit. Quia consectetur minima quidem ipsa omnis quod. Possimus quia reiciendis tempore.",
                            title = "Infrastructure"
                        },
                        new
                        {
                            id = new Guid("2154882c-5111-031a-675c-d597652a731f"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(3411),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Facilis aut eligendi minima esse. Incidunt fugiat asperiores sit illo veniam magni accusamus sed labore. Aut quibusdam ex soluta sunt occaecati id dolores. Vero nihil magni provident dolorum illum architecto ipsam odit. Nam modi dolor minus. Voluptatum ratione est delectus est.\n\nDoloremque eos voluptas consequatur aut. Fuga non est. Nihil molestiae qui quis velit molestiae. Nam error quaerat assumenda excepturi iure labore et. Qui corporis modi et consequatur quas consequatur eos.\n\nSapiente recusandae fugit amet hic iste tempore eum. Quis deleniti quod id officia possimus tenetur. Quam magnam dignissimos repudiandae temporibus at.",
                            title = "Identity"
                        },
                        new
                        {
                            id = new Guid("4af8876b-1046-1c65-7bca-f2e67ece11ea"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(3622),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Provident et nobis molestiae quisquam temporibus consequatur et expedita sapiente. Quibusdam praesentium placeat veritatis sit iusto autem. Ipsa et magni ad repellat dolor hic quo totam et. Iste quaerat est est aut dignissimos. Enim sit facilis ab aut magni velit.\n\nEaque excepturi qui totam explicabo odit ut est. Atque vel maiores libero quia nulla. Ut aut animi omnis aut aut voluptatem alias sunt occaecati. Ipsum odio non.\n\nConsequatur rerum non occaecati et. Voluptatum voluptatem qui ut deleniti ipsam. Corporis deleniti enim id consequatur similique assumenda possimus voluptatibus earum. Magnam autem eum quas.",
                            title = "Operations"
                        },
                        new
                        {
                            id = new Guid("bc0adbf6-a7be-b936-5f9c-b170709d5dce"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(3834),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Quo saepe voluptatum laboriosam aut in ut sit voluptatem sint. Voluptates maiores aliquid maiores quae reiciendis molestiae. Sapiente sed dignissimos aut. Modi accusantium accusamus veniam corporis asperiores ut. Cumque est aspernatur quo.\n\nVelit tempore enim voluptas distinctio et voluptatem voluptas dolorem. Cumque eum omnis dignissimos molestias. Est illo dolorem est aut quae velit fugiat. Dolorum doloribus facere consequuntur qui repellendus. Voluptas eum magnam veniam provident autem distinctio voluptas. Et dolore porro enim mollitia hic enim eos velit.\n\nSit iure quia vitae. Accusamus maxime sint quas mollitia odio. Dolorem asperiores rem non temporibus consequatur culpa rerum voluptatem nobis. Sint quia et.",
                            title = "Response"
                        },
                        new
                        {
                            id = new Guid("7864d72e-a048-e1e4-8481-2f8f44f8d5fd"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(4064),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Recusandae placeat esse. Aperiam labore sit et est. Ut debitis nisi ab veniam hic vero. Et hic dicta. Nisi sunt sunt a delectus eos.\n\nEa quis ea vel velit nostrum sit veniam aliquid iste. Deserunt et ut ullam amet. Et minima assumenda nesciunt voluptas consectetur aut exercitationem iure qui. Voluptatem et et ut adipisci modi amet repudiandae maiores.\n\nEum non molestias id qui repellat. Rerum quos ut incidunt tenetur dolor quia voluptatibus excepturi. Nostrum consequatur maxime necessitatibus sit et eos rem et dolor. Corrupti non quos sit eum est inventore reprehenderit fuga ipsa. Nisi reiciendis molestias quia voluptas ipsum in ex atque.",
                            title = "Web"
                        },
                        new
                        {
                            id = new Guid("c0d3c6de-39d8-2f4d-3fa4-9e3bf768d268"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(4291),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Officiis nobis sed. Et commodi accusamus natus ullam ut. Rerum nihil aut asperiores est quo voluptatem.\n\nExplicabo tenetur consequatur aspernatur iste sed et consequatur. Cumque repellat repudiandae debitis. Magnam nobis asperiores rerum distinctio.\n\nNatus exercitationem nihil eum quia id. Expedita saepe a nemo. Nam porro praesentium non saepe cumque optio voluptatem asperiores. Qui et perspiciatis. Ut ut consequatur accusantium saepe necessitatibus culpa a minus neque. Enim repudiandae veniam eaque a cumque sit vel.",
                            title = "Tactics"
                        },
                        new
                        {
                            id = new Guid("d17de2de-8cf7-d12c-0c70-6fb874408fb1"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(4465),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Sint in unde voluptas voluptas vel sapiente. Est vel qui molestias odit. Dignissimos eaque quaerat laboriosam quia pariatur ab autem. Ipsa omnis ea vero ea. Eum non asperiores sed consectetur mollitia provident. Quam error minus cumque quae magni non explicabo architecto quibusdam.\n\nVeritatis laborum qui soluta. Architecto odio magnam minus quis ipsa aut. Alias repudiandae molestiae molestias nisi iusto maxime iusto. Repellat saepe est est sed sunt. Porro delectus maiores quam aut.\n\nEt rerum culpa minus sunt soluta ipsum quisquam. Aperiam fugiat voluptates at facere dolores modi dolore unde numquam. Veniam culpa fuga quos accusamus impedit iusto dolores. Eum inventore omnis dolorum soluta vel. Soluta hic eligendi. Quis aut nihil est dolor maxime autem est quis iste.",
                            title = "Accounts"
                        },
                        new
                        {
                            id = new Guid("746622bc-296e-8110-3d67-0b0ff9510a88"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(4718),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Corporis iusto reiciendis nihil. Consequatur et excepturi aut. Libero provident eum asperiores.\n\nAliquam illum quae eos rerum porro libero odit quae. Assumenda dignissimos quia et distinctio. Quam quia voluptatibus sed. Culpa totam eos quos consequatur eveniet ratione rem deserunt. Esse tempore ut vitae beatae minima.\n\nOccaecati aut id qui repellendus vitae. Esse rerum voluptatem tenetur. Tempore aut eligendi repudiandae nulla repellendus eos. Ea pariatur voluptatem ipsum magnam sit ea libero quia.",
                            title = "Factors"
                        },
                        new
                        {
                            id = new Guid("db42a994-00e9-f1d4-8336-137d579b991a"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(4888),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Ea sint suscipit qui impedit ut ratione architecto ratione. Quos debitis libero deleniti reprehenderit itaque eligendi omnis. In aut totam dolor dolor dolorem.\n\nEum dolorum vero rerum sed. Quidem molestias cupiditate quod. Quia vel sed molestiae dolore sint et. Voluptatem ut sed est et aperiam et iusto itaque. Et consequuntur sed ut error.\n\nConsectetur voluptatem sit ut necessitatibus. Aperiam numquam quae. Qui optio quod accusamus at dolorum doloremque ratione adipisci ut.",
                            title = "Intranet"
                        },
                        new
                        {
                            id = new Guid("81283f7c-c169-77e4-8855-79896be2327c"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(5048),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Voluptatem earum officia voluptatem ea nisi est impedit cumque. Nam quo ut et perspiciatis id illo. Voluptates doloremque in qui et tempora rem. Alias iste ut qui aut qui aut.\n\nEveniet ad esse fuga qui. Quae est sint voluptatum aliquam odit nisi voluptatibus. Repellat dolor voluptatibus ea eaque commodi. Rerum voluptas aperiam dolorem nihil excepturi reiciendis.\n\nSed quis tempore voluptatem et eum qui possimus pariatur praesentium. Facilis sapiente id aut at fuga sit et distinctio repudiandae. Nulla modi iure. Laudantium consequatur non aspernatur repellendus in aliquam. Eius error perferendis numquam eum voluptatem eos incidunt sint beatae.",
                            title = "Operations"
                        },
                        new
                        {
                            id = new Guid("bed06075-0813-4292-61f2-fa076d74d5b4"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(5263),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Ut sint adipisci exercitationem dolor. Perferendis suscipit ut corrupti eos qui sit minima nostrum quam. Earum explicabo magni aut. Delectus recusandae et ad reprehenderit alias sint. Officia et nisi rerum qui tenetur tempore. Corrupti natus velit occaecati eum rerum quia earum.\n\nDolores blanditiis unde. Consequuntur in et. Maiores vero aut error consectetur ut expedita totam dignissimos.\n\nExcepturi accusamus iste. Aut ratione quia animi et recusandae voluptate tempora. Voluptate qui quia quam harum vel quo. Dolores eum consectetur quia qui expedita. Eveniet non ducimus excepturi ad qui hic numquam qui ullam.",
                            title = "Program"
                        },
                        new
                        {
                            id = new Guid("2a09684a-6253-bb5b-b5eb-8b55b1815b07"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(5473),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Omnis et reprehenderit magni commodi magnam. Labore quam est. Voluptas qui et vitae consequatur vitae voluptas in. Est deleniti voluptatem quaerat id cumque saepe.\n\nSed minima quibusdam voluptas pariatur quo. Deserunt quia rerum adipisci. Ducimus qui aspernatur. Consequuntur iste omnis fugiat et nostrum quos vero. Qui enim facilis adipisci sequi voluptas consequatur commodi beatae occaecati.\n\nRepellat ab perspiciatis quo eum ut aut eum. Eligendi assumenda odit error ad non voluptates animi. Veritatis quae error numquam nostrum voluptatem et eos inventore. Sit atque quia nesciunt sunt voluptas tempore reprehenderit ut modi. Voluptas cumque sit temporibus incidunt dolorem. Aperiam rerum dicta similique dolor beatae est autem.",
                            title = "Directives"
                        },
                        new
                        {
                            id = new Guid("35404dee-e62f-e435-c800-a1f69e267925"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(5740),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Dolorum dolor modi cum placeat animi aliquam omnis consequuntur repellendus. Et fugiat perferendis inventore dignissimos. Aut recusandae alias error et praesentium consequatur nisi qui explicabo. Voluptates sit ut earum consequuntur qui nihil eum qui aperiam. Earum nam quia est itaque saepe alias placeat. Et voluptas id rerum porro qui.\n\nAdipisci tenetur minima eos dicta est praesentium omnis. Est distinctio sit autem. Qui rem nemo non est corporis dolor quod. Ipsa debitis adipisci maiores molestiae hic rem.\n\nAut nostrum enim vitae. Voluptatum iure maxime perspiciatis nihil sunt explicabo autem et. Earum est nostrum a eaque.",
                            title = "Configuration"
                        },
                        new
                        {
                            id = new Guid("2d370a44-9e74-0d63-a7e0-21c15dc54aa4"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(5951),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Voluptas aut quas aspernatur sunt. Quae labore rerum ad dolore at eaque repudiandae. Vero eveniet voluptas temporibus tenetur. Ipsum ratione aperiam impedit non qui sunt nulla. Incidunt voluptatibus rerum totam vitae. Ut et aliquam dicta est labore aut quia.\n\nIn eos aut incidunt repudiandae. Quas aut non laborum atque exercitationem. Qui tempora perferendis nulla rerum sit dignissimos nihil reiciendis asperiores. Recusandae eum corporis eaque aut et non dolore dicta eos. Provident molestiae atque aperiam consequatur necessitatibus sunt saepe maxime optio.\n\nIpsa ab et. Voluptas et nisi. Ut dolor quibusdam vero quam id. Voluptas aut sed suscipit nostrum necessitatibus repudiandae iure esse. Vero temporibus quam.",
                            title = "Implementation"
                        },
                        new
                        {
                            id = new Guid("c2e17491-2b4c-7550-dc45-c6b3131eb74b"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(6184),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Et quia praesentium voluptas et vero suscipit quod recusandae nemo. Explicabo officia quis repellat rerum temporibus delectus. Enim ad est dolorem repudiandae maxime perspiciatis et consequatur. Soluta sed eligendi quod rerum aut nihil voluptate. Ut corrupti in in assumenda consequatur molestiae. Dolores dolores ut repudiandae eaque praesentium sed.\n\nAut aliquam quod consequuntur. Illum amet quisquam labore nesciunt deserunt rem ut. Omnis numquam qui et sint officiis explicabo et quia. Error deserunt qui.\n\nEst et delectus esse. Neque qui reiciendis. Vel debitis ullam quo ad et officiis deleniti et sit. Quia quas sequi sunt voluptas ipsa repellendus. Dignissimos sed omnis aut assumenda. Minus repudiandae iusto dignissimos nemo qui.",
                            title = "Group"
                        },
                        new
                        {
                            id = new Guid("fe80351e-be10-76c4-6029-f5df12e802a4"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(6416),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Aspernatur sit aut alias quo quia quas. Fuga alias odio culpa nihil quod quia a consectetur reprehenderit. Numquam possimus placeat. Accusamus commodi minima hic. Et ab perferendis sunt voluptatem corporis aut. Natus nihil quo expedita et eum.\n\nId corporis sapiente est. Hic omnis et voluptates dolores est unde. Ex ab eius iure veniam magnam at quasi.\n\nEt dolorem est est atque eum. Deserunt minima dolorem molestiae ut quis. Dolorem odio consequatur. Praesentium quasi architecto est aut consequuntur iste. Quis non voluptas et amet amet quisquam.",
                            title = "Factors"
                        },
                        new
                        {
                            id = new Guid("4e593e5a-49f0-7f1f-f5ae-c0f34d50cd1d"),
                            acesses = 0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 872, DateTimeKind.Local).AddTicks(6612),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            text = "Laboriosam tempore provident voluptatibus molestiae praesentium animi perspiciatis ex ea. Aliquam expedita aperiam cupiditate saepe magnam reprehenderit. Enim eligendi cumque. Asperiores sed quisquam quaerat recusandae modi. Iure est iste facilis.\n\nEa voluptas reiciendis provident. Doloremque beatae harum quo laborum et quia quae. Voluptate dolorem similique tempore quibusdam eligendi molestiae et aut dicta.\n\nLaborum dolores vel labore dignissimos cupiditate. Similique neque aut facere nam doloribus. Eveniet laudantium ut laudantium nostrum quia fuga qui laboriosam odit. Reiciendis beatae impedit ad dignissimos modi omnis non praesentium. Hic consequatur dolores non quae sapiente.",
                            title = "Configuration"
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_categories");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_categories_user_id");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("3f23e47f-2c4c-4eb7-9dc2-2030fa63be58"),
                            name = "c#",
                            userId = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72")
                        },
                        new
                        {
                            id = new Guid("cacca94a-b0f2-428d-a5d8-d5fba54dc09e"),
                            name = "c",
                            userId = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72")
                        },
                        new
                        {
                            id = new Guid("78466364-b7fd-4402-8dae-472777e86195"),
                            name = "Js",
                            userId = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72")
                        },
                        new
                        {
                            id = new Guid("d6b23e05-bfff-4f9c-a30c-d36410adce1f"),
                            name = "Java",
                            userId = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72")
                        },
                        new
                        {
                            id = new Guid("94de5fdb-c05f-46e1-ad79-753d8ca03327"),
                            name = "Typescript",
                            userId = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72")
                        },
                        new
                        {
                            id = new Guid("98d1bf91-8360-4806-af8c-16144c8f0276"),
                            name = "PHP",
                            userId = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72")
                        },
                        new
                        {
                            id = new Guid("fda313e0-9081-452a-a669-9342181a315d"),
                            name = "MySql",
                            userId = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72")
                        },
                        new
                        {
                            id = new Guid("12d037c1-8ad4-4347-9796-8b34b1f5c4f3"),
                            name = "SQL",
                            userId = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72")
                        },
                        new
                        {
                            id = new Guid("cf34a0b0-4b9b-4fb5-a80d-fcff570e7444"),
                            name = "Rust",
                            userId = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72")
                        },
                        new
                        {
                            id = new Guid("7f64b9bb-c6ff-44f8-b370-16e5bdb200a9"),
                            name = "F#",
                            userId = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72")
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Certificate", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("courseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("emited_at")
                        .HasColumnType("Date")
                        .HasColumnName("emited_at");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_certificates");

                    b.HasIndex("courseId")
                        .HasDatabaseName("ix_certificates_course_id");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_certificates_user_id");

                    b.ToTable("certificates", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("Subscriptionplanid")
                        .HasColumnType("uuid")
                        .HasColumnName("subscriptionplanid");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_clients");

                    b.HasIndex("Subscriptionplanid")
                        .HasDatabaseName("ix_clients_subscriptionplanid");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_clients_user_id");

                    b.ToTable("clients", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("c2826cc4-83bb-4044-861e-d514e0d9cb12"),
                            userId = new Guid("c8a697d5-469a-4972-b4fc-7ba8e8a6a474")
                        },
                        new
                        {
                            id = new Guid("06dab68d-f78a-4d32-9adb-e70d1635db37"),
                            userId = new Guid("a5123659-865b-44fd-b75a-be1df15b1581")
                        },
                        new
                        {
                            id = new Guid("76fa18d5-76d4-48ef-855a-f95ef6b0e16f"),
                            userId = new Guid("018fe328-ec3f-4f3b-acbb-68fc263d8293")
                        },
                        new
                        {
                            id = new Guid("745d07c7-ac23-4d7e-b1cf-50f3f83559ff"),
                            userId = new Guid("008dc7ec-0856-4ec5-8172-156693391ac5")
                        },
                        new
                        {
                            id = new Guid("603d97a6-d7c7-4603-b1ea-e089cd598e55"),
                            userId = new Guid("e74d2547-ef4f-494a-8d5a-27878c1c24ed")
                        },
                        new
                        {
                            id = new Guid("61138fb4-8f75-4660-ac87-4bb9d5d700eb"),
                            userId = new Guid("019542c4-3cc6-42b3-9845-fd6912b84a12")
                        },
                        new
                        {
                            id = new Guid("7d2367bc-624b-4422-9033-2f7aeaf62957"),
                            userId = new Guid("edad418d-dc2f-4c14-b4d4-8208e432085b")
                        },
                        new
                        {
                            id = new Guid("e078d2bc-3094-450b-b487-d19c860cdb07"),
                            userId = new Guid("d82fdf03-b026-4690-9661-1f0314f8bc39")
                        },
                        new
                        {
                            id = new Guid("1f3bb6ef-0e4d-472b-8ce5-056a4e07ba8b"),
                            userId = new Guid("c9969727-99b7-45b9-ba55-74dd467c0feb")
                        },
                        new
                        {
                            id = new Guid("b6468a7d-f7a8-49ae-af12-0e82dfd2e7d1"),
                            userId = new Guid("48a4658c-3a9e-4e54-ac58-8139db3a2f1c")
                        },
                        new
                        {
                            id = new Guid("1490584f-0fab-447e-83eb-89314094ab21"),
                            userId = new Guid("66f11611-f3c4-499f-b8e0-bfa155ceadf9")
                        },
                        new
                        {
                            id = new Guid("5b00b9c0-7230-43f6-bc2e-49a5426bf460"),
                            userId = new Guid("10a0f2ad-9c7a-4af6-b5b1-c2a842ff8cce")
                        },
                        new
                        {
                            id = new Guid("b3ff21b3-802a-47fb-8fd3-16704d7d0b08"),
                            userId = new Guid("4cebea30-5096-49c2-8cf0-f92f38185d96")
                        },
                        new
                        {
                            id = new Guid("3d9e9689-e9de-436c-bcd5-efacc3d70c9d"),
                            userId = new Guid("f412c4a5-2b43-4d92-b119-5201521feddf")
                        },
                        new
                        {
                            id = new Guid("60e57af1-b754-40be-aa00-916fdba13b07"),
                            userId = new Guid("d515e32e-75ee-4a9f-ae3e-26c6192d0006")
                        },
                        new
                        {
                            id = new Guid("f4348943-5382-4e3b-a6dc-f19e886ab3d5"),
                            userId = new Guid("d4e7e8ba-2fbc-4a53-870d-72227675423d")
                        },
                        new
                        {
                            id = new Guid("b544dcdd-644c-4820-81cb-6ab91f257ea8"),
                            userId = new Guid("be8a4fe2-ca2b-4144-a13e-6840515593e5")
                        },
                        new
                        {
                            id = new Guid("6c7c7298-3aa7-4704-9b3e-8824251b700b"),
                            userId = new Guid("a3486547-b63c-45a0-a375-36742bd1c9a9")
                        },
                        new
                        {
                            id = new Guid("33cdaa80-55b6-4ca9-ab73-4f50c987bb5d"),
                            userId = new Guid("f723968a-85ba-4c10-adad-8e0377f6d6b8")
                        },
                        new
                        {
                            id = new Guid("54ac2069-a5ef-48c3-bce9-232990261c8d"),
                            userId = new Guid("3ed06120-2d6e-4545-9886-4a1b8845cc25")
                        },
                        new
                        {
                            id = new Guid("e4c5516e-08ba-4d8a-a38c-143e97d40bc2"),
                            userId = new Guid("0d9553dc-8712-4935-8f64-089039406388")
                        },
                        new
                        {
                            id = new Guid("64a129cb-46fd-4310-b2ec-d9ef2242bb9b"),
                            userId = new Guid("58538d27-2f94-44a6-b2fe-8a2c3993f7f5")
                        },
                        new
                        {
                            id = new Guid("bee7210e-b8e9-47ab-a639-a287c9951965"),
                            userId = new Guid("8aa1a1f0-924e-47f7-9299-da1c908d0193")
                        },
                        new
                        {
                            id = new Guid("021268c0-83d4-4f9f-a9f0-71e2235d885f"),
                            userId = new Guid("08d25560-04ea-4b27-9c1e-000d1258ef52")
                        },
                        new
                        {
                            id = new Guid("3a98c066-64ad-4c35-b29b-8604d3416eab"),
                            userId = new Guid("51b6adaa-504d-4be1-af50-63daf9f82922")
                        },
                        new
                        {
                            id = new Guid("a69261dd-e038-42bc-92e2-61914a5d7747"),
                            userId = new Guid("92826420-9e14-4152-b8cb-38a0e41a4263")
                        },
                        new
                        {
                            id = new Guid("5f1af3b5-5603-4836-a8f4-48cc5e4c5502"),
                            userId = new Guid("423f14af-de51-4112-b18e-54803c5d6792")
                        },
                        new
                        {
                            id = new Guid("e42da487-2462-4cd9-b9c8-12eb1fe7d7c4"),
                            userId = new Guid("694d0942-a7a0-4c6c-9173-cd066772960d")
                        },
                        new
                        {
                            id = new Guid("d36f6966-a25b-42c0-967e-ab93b3618934"),
                            userId = new Guid("048114ab-e8cf-4a9c-80ba-5573ef005e39")
                        },
                        new
                        {
                            id = new Guid("12691ae7-3280-4e8e-b2a1-9aa701b1f531"),
                            userId = new Guid("6d11af22-c913-4552-8d6c-9ccaac41604d")
                        },
                        new
                        {
                            id = new Guid("8176d792-a593-421a-ba2e-61844a68d105"),
                            userId = new Guid("780e5534-0f0a-4c28-927e-715cae07229c")
                        },
                        new
                        {
                            id = new Guid("936bf493-fd2c-4856-a592-b08ab9ff02b7"),
                            userId = new Guid("4f56575a-ac02-4702-a6d1-78e44039b62c")
                        },
                        new
                        {
                            id = new Guid("a37496f8-ea2b-467d-bf43-fe9964ad2201"),
                            userId = new Guid("ee6ecd2f-720f-480f-9cfa-8969c212eff3")
                        },
                        new
                        {
                            id = new Guid("a9fcf073-661d-4ba3-8533-266a7c394497"),
                            userId = new Guid("6e512973-4ce3-462a-bb1f-bdb92ab857e8")
                        },
                        new
                        {
                            id = new Guid("3dd6df18-b6a4-492d-9dac-00ca3697c470"),
                            userId = new Guid("3600cb46-645a-4137-b510-046d732760d5")
                        },
                        new
                        {
                            id = new Guid("f64e0269-98f0-4585-9c36-a2a1a83bbec6"),
                            userId = new Guid("7aa01519-89dd-4dbb-8d79-46bfa872154e")
                        },
                        new
                        {
                            id = new Guid("30a2c535-36d5-489c-a87c-f3978fbc667b"),
                            userId = new Guid("978361cc-86c6-405e-b901-331ce9ce7ff3")
                        },
                        new
                        {
                            id = new Guid("3501a2fa-2cd5-44eb-a974-58fcc2fbcc9d"),
                            userId = new Guid("7027a7c8-1d09-4f34-ae95-034a50213416")
                        },
                        new
                        {
                            id = new Guid("df9a1039-997d-43cb-a478-ab546be639e0"),
                            userId = new Guid("dc9d2469-9696-42ec-a26e-9189a3a9374b")
                        },
                        new
                        {
                            id = new Guid("38394761-5998-46c5-96d6-a5e976f224fa"),
                            userId = new Guid("5bf4aa72-5fde-4328-8bcd-625391341d95")
                        },
                        new
                        {
                            id = new Guid("7d20cf2d-b2c8-4f41-b594-d7d00d4791eb"),
                            userId = new Guid("ad1b1cf4-a57e-4dda-bacf-7fbf590dd3de")
                        },
                        new
                        {
                            id = new Guid("f8fb8452-25fd-4d71-8d4f-9238ebd2e2f5"),
                            userId = new Guid("64590e25-be72-40d6-a3b2-bc8930b24a33")
                        },
                        new
                        {
                            id = new Guid("210210a8-a789-411d-94b0-d4e35f0a0931"),
                            userId = new Guid("ff11bfff-4a52-405d-88ce-2a04ae271149")
                        },
                        new
                        {
                            id = new Guid("00911f0f-6bc8-4c26-a206-acebd6430a95"),
                            userId = new Guid("011c4d40-a69b-42d3-9909-fad2863e9244")
                        },
                        new
                        {
                            id = new Guid("c337f99a-dde4-40d3-92bb-a2751c2f739e"),
                            userId = new Guid("83a567a1-2884-4f65-b7ff-99beeebd1c41")
                        },
                        new
                        {
                            id = new Guid("97db8e0f-a9ad-4a75-a683-268aaa21bd52"),
                            userId = new Guid("178d1951-cdc1-45c3-a0c6-b65faad8fdf8")
                        },
                        new
                        {
                            id = new Guid("dd359ef5-e93d-4b0f-bf2b-26e870330290"),
                            userId = new Guid("b72a5e23-e8b9-4341-b278-b9df4c87b6ab")
                        },
                        new
                        {
                            id = new Guid("27dff1f7-831e-4845-9b04-0de21399cf05"),
                            userId = new Guid("ad2eb12c-792b-4b71-913b-0cecd0d7d441")
                        },
                        new
                        {
                            id = new Guid("31480649-94fe-4886-afc9-4b94e37c0dc5"),
                            userId = new Guid("80cdb149-fd1b-4ab4-b116-f895e573f2fc")
                        },
                        new
                        {
                            id = new Guid("35842473-4354-41b7-9b2e-d5f31654d234"),
                            userId = new Guid("cf803453-8606-46ad-958d-1eeb855a4cf3")
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("blogPostId")
                        .HasColumnType("uuid")
                        .HasColumnName("blog_post_id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("id")
                        .HasName("pk_comments");

                    b.HasIndex("blogPostId")
                        .HasDatabaseName("ix_comments_blog_post_id");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("duration")
                        .HasColumnType("text")
                        .HasColumnName("duration");

                    b.Property<Guid>("instructorId")
                        .HasColumnType("uuid")
                        .HasColumnName("instructor_id");

                    b.Property<bool>("is_free")
                        .HasColumnType("boolean")
                        .HasColumnName("is_free");

                    b.Property<DateTime>("lastupdate")
                        .HasColumnType("Date")
                        .HasColumnName("lastupdate");

                    b.Property<string>("thumb")
                        .HasColumnType("text")
                        .HasColumnName("thumb");

                    b.Property<string>("title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("id")
                        .HasName("pk_courses");

                    b.HasIndex("instructorId")
                        .HasDatabaseName("ix_courses_instructor_id");

                    b.ToTable("courses", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("e563ce3f-df14-4f34-a215-5e8e30f53864"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(3645),
                            description = "Nisi sunt aut ea a enim. Molestias odio voluptatum quo cumque ad beatae recusandae cum repellendus. Aperiam vero et soluta non est dolore doloribus. Non illo aut totam id facilis veritatis. Explicabo aut magnam voluptatem qui sapiente ut omnis. Rerum odit consequatur qui incidunt molestias delectus.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(3647),
                            title = "Salsicha"
                        },
                        new
                        {
                            id = new Guid("1a84a7c7-fdd5-4024-bf7d-b7bbc221e108"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(6566),
                            description = "Odio ipsum fugiat aspernatur voluptatem aliquam enim. Dolorem magnam inventore minima autem ea atque. Molestiae aut vitae magni. Velit assumenda iusto dolores iure corporis. Et voluptatem repudiandae ut rem nesciunt nobis.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(6567),
                            title = "Sabonete"
                        },
                        new
                        {
                            id = new Guid("e8e6a672-b211-4f47-b8b3-cc2174b79873"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(6736),
                            description = "Consequuntur quis vel consequatur voluptates aut quia fuga dolorum voluptatem. Omnis temporibus sunt. Aspernatur maiores quibusdam aut praesentium maxime. Illo autem quod adipisci. Velit quam qui. Enim et iure.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(6737),
                            title = "Cadeira"
                        },
                        new
                        {
                            id = new Guid("4452d91e-571e-4123-9071-cf93d96a19e1"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(6834),
                            description = "Sed veritatis odio molestiae accusamus. Ut voluptatem quia veniam eum nesciunt molestias quam. Dicta dolor quia molestias ipsam eos dolor. Nisi et architecto soluta laborum harum dolorem deleniti ut.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(6834),
                            title = "Carro"
                        },
                        new
                        {
                            id = new Guid("ac1e8261-c167-4be9-b7d5-80214402e428"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(6908),
                            description = "Sit officia quia quia sit quibusdam. Suscipit eos numquam sed eos quam esse non ab iusto. Doloremque cum quaerat quis qui.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(6909),
                            title = "Camiseta"
                        },
                        new
                        {
                            id = new Guid("422b2668-b2e2-44ee-803e-a67b927b4259"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(6962),
                            description = "Non minima odio voluptas et. Et ratione autem id quae id qui sed tempora sit. Qui a et quas quas.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(6963),
                            title = "Bacon"
                        },
                        new
                        {
                            id = new Guid("02daf37c-ec22-4494-9198-7ec6b305b9b0"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7013),
                            description = "Beatae aut modi excepturi quo. Nostrum alias ab voluptas suscipit. Illum blanditiis animi consequatur velit ut aperiam. Distinctio excepturi pariatur in sint quis suscipit perspiciatis.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7014),
                            title = "Camiseta"
                        },
                        new
                        {
                            id = new Guid("53bd7a6f-3499-433e-a269-25d86703a421"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7081),
                            description = "Possimus ut odit nihil non quia similique ipsam eos et. Sequi et a sunt nostrum animi animi. Dicta quibusdam tempore qui deleniti sed unde. Temporibus debitis ad dolor dolores molestias quo veniam. Et consequatur nam sapiente minima soluta nulla ad cupiditate. Tenetur itaque fuga voluptatem eos sed dolorum.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7081),
                            title = "Computador"
                        },
                        new
                        {
                            id = new Guid("c3565153-e77f-46a3-a89e-a840311d209a"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7191),
                            description = "Fuga ipsum repellat. Voluptatem molestiae voluptatibus perferendis eum nulla quia adipisci. Reprehenderit aut accusantium. Labore eos nisi aut ad excepturi neque corporis. Natus id illum vel nisi est qui perferendis quidem. Ea animi cum culpa vel voluptatem nesciunt molestias odio voluptatum.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7191),
                            title = "Cadeira"
                        },
                        new
                        {
                            id = new Guid("1eb9d3e9-5941-4d7c-a3fe-c8f26648cb2b"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7284),
                            description = "Nisi a doloribus voluptate quas sint perspiciatis. Molestias aut alias placeat et illum enim quo. Ut alias vero sint explicabo. Sed ratione et consectetur consequatur laboriosam voluptate ut vel nemo.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7284),
                            title = "Sapatos"
                        },
                        new
                        {
                            id = new Guid("6973d6f3-2fa8-4fa1-8608-117b7346d419"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7358),
                            description = "Cum iure deleniti aut velit qui qui. Laborum quia aliquam et qui. Molestiae ipsum similique totam. Nihil et magni eligendi rem nisi blanditiis et sequi.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7359),
                            title = "Sabonete"
                        },
                        new
                        {
                            id = new Guid("7417c3f3-4047-402c-87fc-afd8c45c5e67"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7418),
                            description = "Accusantium itaque vitae. Rerum ut expedita doloribus enim enim impedit animi dignissimos. Id voluptas molestias.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7418),
                            title = "Sabonete"
                        },
                        new
                        {
                            id = new Guid("7ea3c454-db2e-4edc-91c6-da1839a0a432"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7465),
                            description = "Ab suscipit fugiat molestiae accusantium. Ducimus nostrum adipisci est deserunt ipsum atque accusantium ut delectus. Expedita harum vel est quia doloremque minima soluta.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7466),
                            title = "Salada"
                        },
                        new
                        {
                            id = new Guid("87c600cd-fbea-49c5-a7a9-5fa5f95011bf"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7516),
                            description = "Et reiciendis delectus deserunt expedita ipsum quos. Fugiat veritatis veritatis unde nobis velit neque fuga consequuntur impedit. Eius nisi eveniet sit aliquam sed natus voluptas sequi veniam. Ratione id voluptatem voluptatem eos dolor sed ex temporibus earum. Aliquam blanditiis dolorem debitis eaque.",
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = false,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7517),
                            title = "Carro"
                        },
                        new
                        {
                            id = new Guid("adda0879-b995-4c48-80ca-43198fa27c45"),
                            active = true,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7613),
                            instructorId = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            is_free = true,
                            lastupdate = new DateTime(2024, 9, 4, 12, 57, 6, 874, DateTimeKind.Local).AddTicks(7614),
                            title = "Curso de baixa qualidade"
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.CourseCategory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("categoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<Guid>("courseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.HasKey("id")
                        .HasName("pk_course_categories");

                    b.HasIndex("categoryId")
                        .HasDatabaseName("ix_course_categories_category_id");

                    b.HasIndex("courseId")
                        .HasDatabaseName("ix_course_categories_course_id");

                    b.ToTable("course_categories", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Instructor", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("github")
                        .HasColumnType("text")
                        .HasColumnName("github");

                    b.Property<string>("social_network")
                        .HasColumnType("text")
                        .HasColumnName("social_network");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_instructors");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_instructors_user_id");

                    b.ToTable("instructors", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("d05532c7-e5c5-47e1-a83f-39d798ef2e33"),
                            userId = new Guid("17813b34-21b2-4f1a-b6bc-bb4e2eb4b734")
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Module", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("complete")
                        .HasColumnType("boolean")
                        .HasColumnName("complete");

                    b.Property<Guid>("courseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<string>("title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("id")
                        .HasName("pk_modules");

                    b.HasIndex("courseId")
                        .HasDatabaseName("ix_modules_course_id");

                    b.ToTable("modules", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("19248b65-5669-463e-84d4-737ceaa1ec68"),
                            complete = false,
                            courseId = new Guid("adda0879-b995-4c48-80ca-43198fa27c45"),
                            order = 0,
                            title = "introducao"
                        },
                        new
                        {
                            id = new Guid("56268b89-d29c-4061-a218-fac5714be968"),
                            complete = false,
                            courseId = new Guid("adda0879-b995-4c48-80ca-43198fa27c45"),
                            order = 1,
                            title = "Modulo 2"
                        },
                        new
                        {
                            id = new Guid("b70750b5-7a72-4dd2-9c5e-51854760210f"),
                            complete = false,
                            courseId = new Guid("adda0879-b995-4c48-80ca-43198fa27c45"),
                            order = 2,
                            title = "Modulo 3"
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.PostCategory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("blogPostId")
                        .HasColumnType("uuid")
                        .HasColumnName("blog_post_id");

                    b.Property<Guid>("categoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.HasKey("id")
                        .HasName("pk_post_categories");

                    b.HasIndex("blogPostId")
                        .HasDatabaseName("ix_post_categories_blog_post_id");

                    b.HasIndex("categoryId")
                        .HasDatabaseName("ix_post_categories_category_id");

                    b.ToTable("post_categories", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("7f4a4075-3e62-4fcd-9b3a-25d73628baed"),
                            blogPostId = new Guid("a2f854ac-c94a-7583-0c51-f3166da59571"),
                            categoryId = new Guid("12d037c1-8ad4-4347-9796-8b34b1f5c4f3")
                        },
                        new
                        {
                            id = new Guid("8b21b6b0-37bb-4665-bb00-e495cdfbb76e"),
                            blogPostId = new Guid("ea836b66-d80b-bc44-fb29-64f18390995c"),
                            categoryId = new Guid("fda313e0-9081-452a-a669-9342181a315d")
                        },
                        new
                        {
                            id = new Guid("6f76cf97-1b91-423f-8b93-c54cfed6d13f"),
                            blogPostId = new Guid("837a24e5-3685-b819-d179-1910241c89db"),
                            categoryId = new Guid("98d1bf91-8360-4806-af8c-16144c8f0276")
                        },
                        new
                        {
                            id = new Guid("c562e47c-d28f-4023-8ee6-b72beabc955c"),
                            blogPostId = new Guid("ac6fa1f1-dccf-e3b4-62c8-842fbad7ed86"),
                            categoryId = new Guid("3f23e47f-2c4c-4eb7-9dc2-2030fa63be58")
                        },
                        new
                        {
                            id = new Guid("fcc25278-21a4-43bd-8a9a-a230f7e428e1"),
                            blogPostId = new Guid("07c50a6a-c7d1-1d89-84fa-1d57e9b23460"),
                            categoryId = new Guid("cf34a0b0-4b9b-4fb5-a80d-fcff570e7444")
                        },
                        new
                        {
                            id = new Guid("13220bbc-ade9-4ca7-95e5-a1d62721467b"),
                            blogPostId = new Guid("13e3cee9-406f-115d-52a7-3faed6bd63f2"),
                            categoryId = new Guid("cf34a0b0-4b9b-4fb5-a80d-fcff570e7444")
                        },
                        new
                        {
                            id = new Guid("8a0ae792-8795-41f5-a80c-e7d932fc3496"),
                            blogPostId = new Guid("563afaad-c07d-4003-3c62-981332004fdd"),
                            categoryId = new Guid("78466364-b7fd-4402-8dae-472777e86195")
                        },
                        new
                        {
                            id = new Guid("bc46867f-c5ae-4322-8d95-c1bffdd5877c"),
                            blogPostId = new Guid("155443f7-b948-755e-ed1a-abeb63d9d795"),
                            categoryId = new Guid("3f23e47f-2c4c-4eb7-9dc2-2030fa63be58")
                        },
                        new
                        {
                            id = new Guid("03b53456-235a-40fe-84c2-6216537214b6"),
                            blogPostId = new Guid("568b5702-916f-1f83-f56f-64c9990e7e73"),
                            categoryId = new Guid("94de5fdb-c05f-46e1-ad79-753d8ca03327")
                        },
                        new
                        {
                            id = new Guid("0e8d60bc-23a7-448a-b12c-2c1800190729"),
                            blogPostId = new Guid("8af0c46f-6f4d-8af3-3823-d88cbd1a60a5"),
                            categoryId = new Guid("98d1bf91-8360-4806-af8c-16144c8f0276")
                        },
                        new
                        {
                            id = new Guid("27e73166-3bc0-452c-a40e-3a85d4db0610"),
                            blogPostId = new Guid("8a674c50-d80a-535a-4d99-e131834901af"),
                            categoryId = new Guid("7f64b9bb-c6ff-44f8-b370-16e5bdb200a9")
                        },
                        new
                        {
                            id = new Guid("df205189-c0be-4db8-8ce9-f1c843adc283"),
                            blogPostId = new Guid("6320d256-b114-5975-5f1f-b0f2a6962142"),
                            categoryId = new Guid("cf34a0b0-4b9b-4fb5-a80d-fcff570e7444")
                        },
                        new
                        {
                            id = new Guid("f88c9cd2-a231-4987-9bad-153ee4da4cad"),
                            blogPostId = new Guid("5045c22a-a594-e4c0-b0d9-a76b25535ee8"),
                            categoryId = new Guid("98d1bf91-8360-4806-af8c-16144c8f0276")
                        },
                        new
                        {
                            id = new Guid("3a1154ed-6d43-4af3-9019-4e3c219f44c1"),
                            blogPostId = new Guid("86ab8359-5841-92e7-8751-479e09610190"),
                            categoryId = new Guid("fda313e0-9081-452a-a669-9342181a315d")
                        },
                        new
                        {
                            id = new Guid("fe46730f-3157-4886-8930-543e68e25360"),
                            blogPostId = new Guid("2154882c-5111-031a-675c-d597652a731f"),
                            categoryId = new Guid("cacca94a-b0f2-428d-a5d8-d5fba54dc09e")
                        },
                        new
                        {
                            id = new Guid("f4ca7154-7606-48be-b7ef-b3b48752b991"),
                            blogPostId = new Guid("4af8876b-1046-1c65-7bca-f2e67ece11ea"),
                            categoryId = new Guid("3f23e47f-2c4c-4eb7-9dc2-2030fa63be58")
                        },
                        new
                        {
                            id = new Guid("ab08d7ee-dd44-4aad-a563-9f6c08f497d0"),
                            blogPostId = new Guid("bc0adbf6-a7be-b936-5f9c-b170709d5dce"),
                            categoryId = new Guid("12d037c1-8ad4-4347-9796-8b34b1f5c4f3")
                        },
                        new
                        {
                            id = new Guid("0b9df756-2d4a-48ca-b78b-f55976ecd3aa"),
                            blogPostId = new Guid("7864d72e-a048-e1e4-8481-2f8f44f8d5fd"),
                            categoryId = new Guid("7f64b9bb-c6ff-44f8-b370-16e5bdb200a9")
                        },
                        new
                        {
                            id = new Guid("078a71c9-c27f-40d8-81ae-341278f35214"),
                            blogPostId = new Guid("c0d3c6de-39d8-2f4d-3fa4-9e3bf768d268"),
                            categoryId = new Guid("fda313e0-9081-452a-a669-9342181a315d")
                        },
                        new
                        {
                            id = new Guid("e48330c9-b81d-40be-8a7a-8043bf05aee7"),
                            blogPostId = new Guid("d17de2de-8cf7-d12c-0c70-6fb874408fb1"),
                            categoryId = new Guid("12d037c1-8ad4-4347-9796-8b34b1f5c4f3")
                        },
                        new
                        {
                            id = new Guid("d206b389-6339-42e2-bafd-6cc484ccc0ec"),
                            blogPostId = new Guid("746622bc-296e-8110-3d67-0b0ff9510a88"),
                            categoryId = new Guid("fda313e0-9081-452a-a669-9342181a315d")
                        },
                        new
                        {
                            id = new Guid("b69e3919-245d-42c5-baad-d50adf20b6a4"),
                            blogPostId = new Guid("db42a994-00e9-f1d4-8336-137d579b991a"),
                            categoryId = new Guid("78466364-b7fd-4402-8dae-472777e86195")
                        },
                        new
                        {
                            id = new Guid("61e315b5-921d-4ad7-8664-56e6515498ad"),
                            blogPostId = new Guid("81283f7c-c169-77e4-8855-79896be2327c"),
                            categoryId = new Guid("94de5fdb-c05f-46e1-ad79-753d8ca03327")
                        },
                        new
                        {
                            id = new Guid("b4bc027c-a8c4-4749-b85d-5221d7c2c3b3"),
                            blogPostId = new Guid("bed06075-0813-4292-61f2-fa076d74d5b4"),
                            categoryId = new Guid("cf34a0b0-4b9b-4fb5-a80d-fcff570e7444")
                        },
                        new
                        {
                            id = new Guid("c53d73bb-70d4-4b51-bce6-bf46850321c1"),
                            blogPostId = new Guid("2a09684a-6253-bb5b-b5eb-8b55b1815b07"),
                            categoryId = new Guid("fda313e0-9081-452a-a669-9342181a315d")
                        },
                        new
                        {
                            id = new Guid("b5e32e69-8bb9-45e1-8972-f13cfef18a34"),
                            blogPostId = new Guid("35404dee-e62f-e435-c800-a1f69e267925"),
                            categoryId = new Guid("7f64b9bb-c6ff-44f8-b370-16e5bdb200a9")
                        },
                        new
                        {
                            id = new Guid("4d2fec8b-64c4-419f-a5fd-0d9984ea9397"),
                            blogPostId = new Guid("2d370a44-9e74-0d63-a7e0-21c15dc54aa4"),
                            categoryId = new Guid("12d037c1-8ad4-4347-9796-8b34b1f5c4f3")
                        },
                        new
                        {
                            id = new Guid("8a0c0a7f-b925-47e8-9a48-913467cf82b0"),
                            blogPostId = new Guid("c2e17491-2b4c-7550-dc45-c6b3131eb74b"),
                            categoryId = new Guid("d6b23e05-bfff-4f9c-a30c-d36410adce1f")
                        },
                        new
                        {
                            id = new Guid("b2e574b0-a3d3-46e6-a2ee-83f1b0e2d0ec"),
                            blogPostId = new Guid("fe80351e-be10-76c4-6029-f5df12e802a4"),
                            categoryId = new Guid("7f64b9bb-c6ff-44f8-b370-16e5bdb200a9")
                        },
                        new
                        {
                            id = new Guid("8db2bf43-b3e1-42f6-94e9-456377df059e"),
                            blogPostId = new Guid("4e593e5a-49f0-7f1f-f5ae-c0f34d50cd1d"),
                            categoryId = new Guid("94de5fdb-c05f-46e1-ad79-753d8ca03327")
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Review", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("clientId")
                        .HasColumnType("uuid")
                        .HasColumnName("client_id");

                    b.Property<Guid>("courseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("id")
                        .HasName("pk_reviews");

                    b.HasIndex("clientId")
                        .HasDatabaseName("ix_reviews_client_id");

                    b.HasIndex("courseId")
                        .HasDatabaseName("ix_reviews_course_id");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Subscriptionplan", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("adminId")
                        .HasColumnType("uuid")
                        .HasColumnName("admin_id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("months")
                        .HasColumnType("integer")
                        .HasColumnName("months");

                    b.Property<float>("price")
                        .HasColumnType("real")
                        .HasColumnName("price");

                    b.HasKey("id")
                        .HasName("pk_subscription_plans");

                    b.HasIndex("adminId")
                        .HasDatabaseName("ix_subscription_plans_admin_id");

                    b.ToTable("subscription_plans", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165"),
                            adminId = new Guid("f8318560-d792-4a23-acf7-a81aa5a6dfbd"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(6641),
                            description = "Free",
                            months = 0,
                            price = 0f
                        },
                        new
                        {
                            id = new Guid("719d7b27-b20e-4260-90d9-0f8797fd9fb8"),
                            adminId = new Guid("f8318560-d792-4a23-acf7-a81aa5a6dfbd"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(6646),
                            description = "Mensal",
                            months = 1,
                            price = 35f
                        },
                        new
                        {
                            id = new Guid("0f1679de-7c9a-46a5-b19e-8707fb922bb0"),
                            adminId = new Guid("f8318560-d792-4a23-acf7-a81aa5a6dfbd"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(6649),
                            description = "Anual",
                            months = 1,
                            price = 399.99f
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<double>("cpf")
                        .HasColumnType("double precision")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<double?>("phone")
                        .HasColumnType("double precision")
                        .HasColumnName("phone");

                    b.HasKey("id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("c8a697d5-469a-4972-b4fc-7ba8e8a6a474"),
                            cpf = 95617343548.0,
                            created_at = new DateTime(2024, 9, 4, 12, 56, 58, 846, DateTimeKind.Local).AddTicks(9181),
                            email = "Calebe.Martins41@bol.com.br",
                            is_active = true,
                            name = "Célia Carvalho",
                            password = "$2a$11$fkEbrO0V0UNs3kTvzvSwN.j6A75dfxcd5Id1uCgUph6nxLjGhl/fO",
                            phone = 92026257887.0
                        },
                        new
                        {
                            id = new Guid("a5123659-865b-44fd-b75a-be1df15b1581"),
                            cpf = 95344330553.0,
                            created_at = new DateTime(2024, 9, 4, 12, 56, 59, 9, DateTimeKind.Local).AddTicks(132),
                            email = "Laura36@yahoo.com",
                            is_active = true,
                            name = "Alice Reis",
                            password = "$2a$11$Fb5ELFn4nO7QiMgd2I1douKgvW5SmDDM/aClEW/GGRxegmH0EjAlG",
                            phone = 76189084150.0
                        },
                        new
                        {
                            id = new Guid("018fe328-ec3f-4f3b-acbb-68fc263d8293"),
                            cpf = 3809790206.0,
                            created_at = new DateTime(2024, 9, 4, 12, 56, 59, 180, DateTimeKind.Local).AddTicks(704),
                            email = "MariaCecilia_Costa5@live.com",
                            is_active = true,
                            name = "Antonella Moraes",
                            password = "$2a$11$V53WcXGyhT67kv13YhfW8OIs9ZQ2zWYfcYmWyS8/bsk9e2c5PNTg.",
                            phone = 510580837.0
                        },
                        new
                        {
                            id = new Guid("008dc7ec-0856-4ec5-8172-156693391ac5"),
                            cpf = 98578941004.0,
                            created_at = new DateTime(2024, 9, 4, 12, 56, 59, 355, DateTimeKind.Local).AddTicks(8548),
                            email = "Joao26@yahoo.com",
                            is_active = true,
                            name = "Melissa Santos",
                            password = "$2a$11$w2FiHFe5TMy3qbuPZvLkEe9kG0lIkzW59irlER8TVP7ukvHPSRVsG",
                            phone = 554737070728.0
                        },
                        new
                        {
                            id = new Guid("e74d2547-ef4f-494a-8d5a-27878c1c24ed"),
                            cpf = 33686655705.0,
                            created_at = new DateTime(2024, 9, 4, 12, 56, 59, 522, DateTimeKind.Local).AddTicks(6086),
                            email = "Sirineu_Barros@live.com",
                            is_active = true,
                            name = "Natália Moraes",
                            password = "$2a$11$L3VBDwv3PeuKSacyj.0XheMlGSS0.yVCKDq6G39DLfFNT7myLuAza",
                            phone = 1479015859.0
                        },
                        new
                        {
                            id = new Guid("019542c4-3cc6-42b3-9845-fd6912b84a12"),
                            cpf = 4335126441.0,
                            created_at = new DateTime(2024, 9, 4, 12, 56, 59, 682, DateTimeKind.Local).AddTicks(7608),
                            email = "Julia.Batista@hotmail.com",
                            is_active = true,
                            name = "Lorraine Franco",
                            password = "$2a$11$4e93AJwhZY22Ybb.v0F0F.DoVum.f16zJaGdKo1a6/BhTEZFW6Kvi",
                            phone = 558424379012.0
                        },
                        new
                        {
                            id = new Guid("edad418d-dc2f-4c14-b4d4-8208e432085b"),
                            cpf = 64286672662.0,
                            created_at = new DateTime(2024, 9, 4, 12, 56, 59, 841, DateTimeKind.Local).AddTicks(81),
                            email = "Ofelia.Silva50@hotmail.com",
                            is_active = true,
                            name = "Isabel Braga",
                            password = "$2a$11$9oBvBkrdFlhG8MA2zFCyPePU8cVZBH2sa.hLxszqzaGOg5cJdoHay",
                            phone = 9383500464.0
                        },
                        new
                        {
                            id = new Guid("d82fdf03-b026-4690-9661-1f0314f8bc39"),
                            cpf = 27139860874.0,
                            created_at = new DateTime(2024, 9, 4, 12, 56, 59, 997, DateTimeKind.Local).AddTicks(2971),
                            email = "Gael_Carvalho78@bol.com.br",
                            is_active = true,
                            name = "Maria Eduarda Santos",
                            password = "$2a$11$f7DdX3keU3h6bcEmwzTsiu6ZeaAb9nEdlaI441bmH5Vi6DEVkNDpK",
                            phone = 9350269449.0
                        },
                        new
                        {
                            id = new Guid("c9969727-99b7-45b9-ba55-74dd467c0feb"),
                            cpf = 16638695371.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 0, 156, DateTimeKind.Local).AddTicks(2581),
                            email = "Isabelly83@live.com",
                            is_active = true,
                            name = "Benício Costa",
                            password = "$2a$11$5l9rA6RWBe55UozSbze.ael4LB9XR16odJDphdk.W6eXNA6NBG9iq",
                            phone = 11753316694.0
                        },
                        new
                        {
                            id = new Guid("48a4658c-3a9e-4e54-ac58-8139db3a2f1c"),
                            cpf = 58981246599.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 0, 314, DateTimeKind.Local).AddTicks(9410),
                            email = "Morgana_Martins41@bol.com.br",
                            is_active = true,
                            name = "Cecília Macedo",
                            password = "$2a$11$LLyvJ7ElcNfRbN28PQIsDeb6L47uIWVSXOmj5SGuCpkSQ2ku1Lj0G",
                            phone = 71947979542.0
                        },
                        new
                        {
                            id = new Guid("66f11611-f3c4-499f-b8e0-bfa155ceadf9"),
                            cpf = 1673733743.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 0, 475, DateTimeKind.Local).AddTicks(7915),
                            email = "Deneval_Costa@gmail.com",
                            is_active = true,
                            name = "Lorenzo Silva",
                            password = "$2a$11$80TecJzOJFOdheOw7xCLlOujGWQZYvJPwj8XsS1iJ5q2ZgHyZV8wy",
                            phone = 559479756525.0
                        },
                        new
                        {
                            id = new Guid("10a0f2ad-9c7a-4af6-b5b1-c2a842ff8cce"),
                            cpf = 57934523629.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 0, 634, DateTimeKind.Local).AddTicks(6306),
                            email = "Lavinia_Moraes@gmail.com",
                            is_active = true,
                            name = "Cecília Martins",
                            password = "$2a$11$uxrN6/KSJdYypHo4EBX1n.X3iBCr3/y6hDsYdhA8dsXRmIn2GYpX6",
                            phone = 554607143152.0
                        },
                        new
                        {
                            id = new Guid("4cebea30-5096-49c2-8cf0-f92f38185d96"),
                            cpf = 58720555105.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 0, 793, DateTimeKind.Local).AddTicks(447),
                            email = "Davi.Carvalho@live.com",
                            is_active = true,
                            name = "Enzo Oliveira",
                            password = "$2a$11$OCRppzjMxVOlXoChnnUu..M1LjrEWRV0.Prvq4qvUvpO3KZlM9kZy",
                            phone = 7303033267.0
                        },
                        new
                        {
                            id = new Guid("f412c4a5-2b43-4d92-b119-5201521feddf"),
                            cpf = 60644611790.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 0, 948, DateTimeKind.Local).AddTicks(84),
                            email = "Marli.Costa83@live.com",
                            is_active = true,
                            name = "Rebeca Santos",
                            password = "$2a$11$56zNieYc4VWwJbmaqXVYdefWLhmdSRAmzcTZ1pGSWaAUBq7yvUKYS",
                            phone = 553301095066.0
                        },
                        new
                        {
                            id = new Guid("d515e32e-75ee-4a9f-ae3e-26c6192d0006"),
                            cpf = 41016987161.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 1, 106, DateTimeKind.Local).AddTicks(7824),
                            email = "Frederico.Souza92@gmail.com",
                            is_active = true,
                            name = "Isabel Carvalho",
                            password = "$2a$11$S1OXWz7EalLJxrzclPe7iesNi1CNOVPnbYKZcaxavIVEiHkPE.VrS",
                            phone = 551314865315.0
                        },
                        new
                        {
                            id = new Guid("d4e7e8ba-2fbc-4a53-870d-72227675423d"),
                            cpf = 56660851232.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 1, 261, DateTimeKind.Local).AddTicks(5756),
                            email = "Morgana87@gmail.com",
                            is_active = true,
                            name = "Júlio César Xavier",
                            password = "$2a$11$ORm5npfbpEkoo.qnnQZZ9.dzFuz9isbQLd2dscEF1N0Ee1EHLBRJ2",
                            phone = 11392219454.0
                        },
                        new
                        {
                            id = new Guid("be8a4fe2-ca2b-4144-a13e-6840515593e5"),
                            cpf = 97074919810.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 1, 416, DateTimeKind.Local).AddTicks(2938),
                            email = "Tertuliano45@live.com",
                            is_active = true,
                            name = "Júlio Carvalho",
                            password = "$2a$11$mhUNhu9nVJp7oy0fV//SGe9P2GQ31GeQz/4dE.ih3CPBqgi0otmk.",
                            phone = 8405111917.0
                        },
                        new
                        {
                            id = new Guid("a3486547-b63c-45a0-a375-36742bd1c9a9"),
                            cpf = 26417613860.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 1, 571, DateTimeKind.Local).AddTicks(8780),
                            email = "Julio.Moraes@yahoo.com",
                            is_active = true,
                            name = "Enzo Gabriel Oliveira",
                            password = "$2a$11$GNmwCyd69mNz9t0RcAk8G.4S.DQICUCz.9cjtlxs79PoSI.dBWObO",
                            phone = 31163264743.0
                        },
                        new
                        {
                            id = new Guid("f723968a-85ba-4c10-adad-8e0377f6d6b8"),
                            cpf = 28139722316.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 1, 729, DateTimeKind.Local).AddTicks(7807),
                            email = "Yango_Albuquerque@live.com",
                            is_active = true,
                            name = "Karla Braga",
                            password = "$2a$11$q2r839R5mM6U6fBcfdDaPukYPdVXo4WM.X6BgGcmwNjzNLHvLdD72",
                            phone = 11259338139.0
                        },
                        new
                        {
                            id = new Guid("3ed06120-2d6e-4545-9886-4a1b8845cc25"),
                            cpf = 7061324597.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 1, 887, DateTimeKind.Local).AddTicks(7208),
                            email = "Emanuel57@live.com",
                            is_active = true,
                            name = "Beatriz Nogueira",
                            password = "$2a$11$rNCg65RhhI1NPibnhRKsseMoPR3SaNJgxpvJm7na04IdtbLZfGC0m",
                            phone = 556921754173.0
                        },
                        new
                        {
                            id = new Guid("0d9553dc-8712-4935-8f64-089039406388"),
                            cpf = 63584172071.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 2, 42, DateTimeKind.Local).AddTicks(2761),
                            email = "Heitor17@live.com",
                            is_active = true,
                            name = "Cauã Santos",
                            password = "$2a$11$qy2tSqdXks.UivRiJNnNHecd3eRquTlrxMmQNAvpjXrAXI.qnd8We",
                            phone = 22257632304.0
                        },
                        new
                        {
                            id = new Guid("58538d27-2f94-44a6-b2fe-8a2c3993f7f5"),
                            cpf = 31182344828.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 2, 195, DateTimeKind.Local).AddTicks(7553),
                            email = "Maite59@gmail.com",
                            is_active = true,
                            name = "Paulo Moraes",
                            password = "$2a$11$lwyPBCYqr59eSXbDmzSz9e9zR2nDN/McTWNpYx/TNw7JLcoablkpq",
                            phone = 554192284421.0
                        },
                        new
                        {
                            id = new Guid("8aa1a1f0-924e-47f7-9299-da1c908d0193"),
                            cpf = 50100561438.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 2, 350, DateTimeKind.Local).AddTicks(2519),
                            email = "Manuela_Martins@hotmail.com",
                            is_active = true,
                            name = "Elisa Martins",
                            password = "$2a$11$niywoHWxLU1DU3NcAojSBOow5.I3IMHne2.RH3EzdcAScr8vrF9.y",
                            phone = 7369741736.0
                        },
                        new
                        {
                            id = new Guid("08d25560-04ea-4b27-9c1e-000d1258ef52"),
                            cpf = 73441230701.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 2, 505, DateTimeKind.Local).AddTicks(7056),
                            email = "Isadora.Franco@hotmail.com",
                            is_active = true,
                            name = "Frederico Martins",
                            password = "$2a$11$Su8709JbkLxDNIW2jiaTDOpuncXDuPfEJTl5aR0RzYC0EC4fGj0aW",
                            phone = 6460588703.0
                        },
                        new
                        {
                            id = new Guid("51b6adaa-504d-4be1-af50-63daf9f82922"),
                            cpf = 94178070800.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 2, 659, DateTimeKind.Local).AddTicks(3537),
                            email = "Caio34@gmail.com",
                            is_active = true,
                            name = "Sara Moraes",
                            password = "$2a$11$cos8bKZNaX0UfFfZmQcKB.qE7wL1/OCQ11qCj1VI1sKAvb5YEzaIG",
                            phone = 551006970340.0
                        },
                        new
                        {
                            id = new Guid("92826420-9e14-4152-b8cb-38a0e41a4263"),
                            cpf = 63250964956.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 2, 814, DateTimeKind.Local).AddTicks(9308),
                            email = "Tertuliano_Moreira96@yahoo.com",
                            is_active = true,
                            name = "Elísio Macedo",
                            password = "$2a$11$JsAR5FxC.z0ops/UA4mRE.9ww0RgYlqjU3C2jIVaRPdf8hqGj9kFy",
                            phone = 57176560133.0
                        },
                        new
                        {
                            id = new Guid("423f14af-de51-4112-b18e-54803c5d6792"),
                            cpf = 4642163468.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 2, 968, DateTimeKind.Local).AddTicks(7288),
                            email = "Janaina_Braga93@hotmail.com",
                            is_active = true,
                            name = "Luiza Franco",
                            password = "$2a$11$he/sfkIiOp34OyrPOve1S.8DGqPEW4s0GsvaBPn20YbRx/3TOshRy",
                            phone = 75207483748.0
                        },
                        new
                        {
                            id = new Guid("694d0942-a7a0-4c6c-9173-cd066772960d"),
                            cpf = 92745574264.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 3, 122, DateTimeKind.Local).AddTicks(8338),
                            email = "AnaLaura.Batista@hotmail.com",
                            is_active = true,
                            name = "Ladislau Albuquerque",
                            password = "$2a$11$rp7GEt/doEKulz5o7I9pV.peH8EegUk90/TFcQJ1eNEzVBqHTa41u",
                            phone = 78833226101.0
                        },
                        new
                        {
                            id = new Guid("048114ab-e8cf-4a9c-80ba-5573ef005e39"),
                            cpf = 98293342102.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 3, 277, DateTimeKind.Local).AddTicks(2531),
                            email = "Gubio47@hotmail.com",
                            is_active = true,
                            name = "Washington Xavier",
                            password = "$2a$11$apEPs8aWyVwl8YgFFeSHquXHzYgimXjWzeBweIOG90XL8emRXGfKq",
                            phone = 6501753631.0
                        },
                        new
                        {
                            id = new Guid("6d11af22-c913-4552-8d6c-9ccaac41604d"),
                            cpf = 37198737307.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 3, 430, DateTimeKind.Local).AddTicks(9061),
                            email = "Victor_Saraiva@hotmail.com",
                            is_active = true,
                            name = "Elisa Costa",
                            password = "$2a$11$lzr7DuAKGdM3KmxkM9prne/OXB5H7ivQddpnCQ3l2fSVD5ffNMUne",
                            phone = 3975113901.0
                        },
                        new
                        {
                            id = new Guid("780e5534-0f0a-4c28-927e-715cae07229c"),
                            cpf = 77712911711.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 3, 589, DateTimeKind.Local).AddTicks(430),
                            email = "Leonardo25@live.com",
                            is_active = true,
                            name = "Noah Batista",
                            password = "$2a$11$nmK6FnGYVi2UWvljI1gz/uS236Dnui35rQqSmLlQTwG4itzmY3Pe.",
                            phone = 76508130518.0
                        },
                        new
                        {
                            id = new Guid("4f56575a-ac02-4702-a6d1-78e44039b62c"),
                            cpf = 37261374245.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 3, 747, DateTimeKind.Local).AddTicks(1275),
                            email = "Eloa.Souza43@live.com",
                            is_active = true,
                            name = "Maria Clara Moreira",
                            password = "$2a$11$k10uceLPbNfcDhB68eXau.KKG79Mz8CRs.B6q89BExLrgoSdGgyBC",
                            phone = 553984100533.0
                        },
                        new
                        {
                            id = new Guid("ee6ecd2f-720f-480f-9cfa-8969c212eff3"),
                            cpf = 52225335907.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 3, 904, DateTimeKind.Local).AddTicks(7489),
                            email = "Guilherme67@bol.com.br",
                            is_active = true,
                            name = "Júlio Moreira",
                            password = "$2a$11$bRL1k1VGg7ereleCCAFvBOYLeEQw4NKo9KE.EQsxWZ9q8d3xt2uEK",
                            phone = 9170740077.0
                        },
                        new
                        {
                            id = new Guid("6e512973-4ce3-462a-bb1f-bdb92ab857e8"),
                            cpf = 26089267899.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 4, 58, DateTimeKind.Local).AddTicks(6842),
                            email = "MariaAlice_Oliveira@live.com",
                            is_active = true,
                            name = "Célia Silva",
                            password = "$2a$11$WklY5ayCZV1B9lGZ4n3rtuslYL55zaledCOTZECbOJ7IXyvF73K6K",
                            phone = 809894374.0
                        },
                        new
                        {
                            id = new Guid("3600cb46-645a-4137-b510-046d732760d5"),
                            cpf = 56384558254.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 4, 215, DateTimeKind.Local).AddTicks(2362),
                            email = "Rebeca.Nogueira@live.com",
                            is_active = true,
                            name = "Yago Moreira",
                            password = "$2a$11$1tBwPP5ZqGfOxpQT0fQRIe6qv9iiPcLjQRs/EhkdtB1uZAXmqaECi",
                            phone = 9803914779.0
                        },
                        new
                        {
                            id = new Guid("7aa01519-89dd-4dbb-8d79-46bfa872154e"),
                            cpf = 2872053808.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 4, 373, DateTimeKind.Local).AddTicks(3947),
                            email = "Laura52@yahoo.com",
                            is_active = true,
                            name = "Théo Macedo",
                            password = "$2a$11$20uXUpj2PK7TVbFXk6SpfeAEe7fIKQX6gf6rwaxAQO/PnVMUXzLTS",
                            phone = 58223701755.0
                        },
                        new
                        {
                            id = new Guid("978361cc-86c6-405e-b901-331ce9ce7ff3"),
                            cpf = 74081140847.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 4, 532, DateTimeKind.Local).AddTicks(4763),
                            email = "Kleber.Batista3@bol.com.br",
                            is_active = true,
                            name = "Isaac Reis",
                            password = "$2a$11$s4wdg/5n1MBEACneedWsX.XyXGVv4T7Uc5YzAq6GfG2BV5Uq3CVCC",
                            phone = 550249747876.0
                        },
                        new
                        {
                            id = new Guid("7027a7c8-1d09-4f34-ae95-034a50213416"),
                            cpf = 68647847970.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 4, 689, DateTimeKind.Local).AddTicks(3866),
                            email = "Isabelly_Oliveira14@hotmail.com",
                            is_active = true,
                            name = "Danilo Silva",
                            password = "$2a$11$sro7dusrwHklypFp8ngjhey88Jv3QLwI7BdhTMiJcTfNop0ljzQai",
                            phone = 4979849354.0
                        },
                        new
                        {
                            id = new Guid("dc9d2469-9696-42ec-a26e-9189a3a9374b"),
                            cpf = 63971644970.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 4, 845, DateTimeKind.Local).AddTicks(6552),
                            email = "Cecilia.Costa@live.com",
                            is_active = true,
                            name = "Alexandre Saraiva",
                            password = "$2a$11$1AMDzGQDgAQVXSeEo0o9eexwrAd.mEJKHFouByFwk8.wFsGnAdEsy",
                            phone = 49321034960.0
                        },
                        new
                        {
                            id = new Guid("5bf4aa72-5fde-4328-8bcd-625391341d95"),
                            cpf = 48489393214.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 5, 1, DateTimeKind.Local).AddTicks(5117),
                            email = "Joaquim_Moreira97@hotmail.com",
                            is_active = true,
                            name = "Joana Carvalho",
                            password = "$2a$11$EQpqIFoYqFvlcHpwmml5nOReIGx8/WmgreQ9hwhxRdnXv3jl47eRC",
                            phone = 7861502126.0
                        },
                        new
                        {
                            id = new Guid("ad1b1cf4-a57e-4dda-bacf-7fbf590dd3de"),
                            cpf = 34598626534.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 5, 157, DateTimeKind.Local).AddTicks(2339),
                            email = "Marina66@hotmail.com",
                            is_active = true,
                            name = "Anthony Albuquerque",
                            password = "$2a$11$RmiI7P4NSYihZmLlxecCxusB/7VTXOPLKTorqyO9WQWS93Z0Zi9n2",
                            phone = 69098706593.0
                        },
                        new
                        {
                            id = new Guid("64590e25-be72-40d6-a3b2-bc8930b24a33"),
                            cpf = 73098437464.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 5, 315, DateTimeKind.Local).AddTicks(794),
                            email = "MariaAlice_Souza@bol.com.br",
                            is_active = true,
                            name = "Marina Reis",
                            password = "$2a$11$/YgYwfIeE6GGoi0xFiioE.rSmHLIXneq1tUcDF1gLIMTVZZ5ZsQcG",
                            phone = 558954410676.0
                        },
                        new
                        {
                            id = new Guid("ff11bfff-4a52-405d-88ce-2a04ae271149"),
                            cpf = 14422113267.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 5, 469, DateTimeKind.Local).AddTicks(3301),
                            email = "EnzoGabriel61@bol.com.br",
                            is_active = true,
                            name = "Janaína Braga",
                            password = "$2a$11$x0xKuAbsj6.kFwo1iNuMHeqGsp35H2MAJd.yX/1xw6GPzSdWvdAhe",
                            phone = 554175912314.0
                        },
                        new
                        {
                            id = new Guid("011c4d40-a69b-42d3-9909-fad2863e9244"),
                            cpf = 32330832540.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 5, 625, DateTimeKind.Local).AddTicks(3465),
                            email = "Paulo_Franco42@live.com",
                            is_active = true,
                            name = "Gael Santos",
                            password = "$2a$11$kdVzTx4tcy1FzW20xHOxeOluknfoPOGaz3gz1Hvv.cmOga.sHKM4.",
                            phone = 69227858658.0
                        },
                        new
                        {
                            id = new Guid("83a567a1-2884-4f65-b7ff-99beeebd1c41"),
                            cpf = 29485739478.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 5, 780, DateTimeKind.Local).AddTicks(2173),
                            email = "JoaoMiguel_Macedo@yahoo.com",
                            is_active = true,
                            name = "Liz Martins",
                            password = "$2a$11$1N3yi/dj3DBFTkVlASYN.uPwdfRu6yfstsvm5SHhM..2CMxuG8lhG",
                            phone = 553684699190.0
                        },
                        new
                        {
                            id = new Guid("178d1951-cdc1-45c3-a0c6-b65faad8fdf8"),
                            cpf = 92744318213.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 5, 937, DateTimeKind.Local).AddTicks(1075),
                            email = "Marli73@gmail.com",
                            is_active = true,
                            name = "Carla Saraiva",
                            password = "$2a$11$fSicM8f6.Kq.FVxGiycqIOK04crfNlYEQPeWx2nDAjZwTUP1cAmJC",
                            phone = 7209343697.0
                        },
                        new
                        {
                            id = new Guid("b72a5e23-e8b9-4341-b278-b9df4c87b6ab"),
                            cpf = 59557427000.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 94, DateTimeKind.Local).AddTicks(1244),
                            email = "Meire_Franco37@live.com",
                            is_active = true,
                            name = "Gael Pereira",
                            password = "$2a$11$M3Z4RZapQPEW/Gl5zHDQxeICHV2npDEYsPm2aIAe9Mdz1S50FjPPa",
                            phone = 7007071518.0
                        },
                        new
                        {
                            id = new Guid("ad2eb12c-792b-4b71-913b-0cecd0d7d441"),
                            cpf = 42521242802.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 247, DateTimeKind.Local).AddTicks(2435),
                            email = "Felicia65@bol.com.br",
                            is_active = true,
                            name = "Yuri Costa",
                            password = "$2a$11$dTQ8INKj64HUlnsU9bsUwuQwhP9SqAn76r.gW10tmuAPYai/9usMO",
                            phone = 5908188639.0
                        },
                        new
                        {
                            id = new Guid("80cdb149-fd1b-4ab4-b116-f895e573f2fc"),
                            cpf = 321309294.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 402, DateTimeKind.Local).AddTicks(5330),
                            email = "Isadora60@bol.com.br",
                            is_active = true,
                            name = "Félix Moraes",
                            password = "$2a$11$lz3c1PqrXSgMB9eaDu11O.vcHVIpbhjGucr1oG4wTHLvrqJdESB6K",
                            phone = 644929893.0
                        },
                        new
                        {
                            id = new Guid("cf803453-8606-46ad-958d-1eeb855a4cf3"),
                            cpf = 679070168.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 557, DateTimeKind.Local).AddTicks(5227),
                            email = "Silas.Costa@hotmail.com",
                            is_active = true,
                            name = "Norberto Martins",
                            password = "$2a$11$/Nxagnb93CAgdKktBRGNN.WFj8jCuX7AZuzt84MQkUFTfU8gAaPY.",
                            phone = 553996514363.0
                        },
                        new
                        {
                            id = new Guid("04c12160-bad6-45ce-903a-67d1afeffe72"),
                            cpf = 123456789.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 713, DateTimeKind.Local).AddTicks(7117),
                            email = "admin@admin",
                            is_active = true,
                            name = "Admin",
                            password = "$2a$11$94C93v89bPF6GaHgOeNoWO1ktRQoaSU4kU0HHUlWg0RhXOWhNozVq",
                            phone = 123456789.0
                        },
                        new
                        {
                            id = new Guid("17813b34-21b2-4f1a-b6bc-bb4e2eb4b734"),
                            cpf = 123456789.0,
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(4945),
                            email = "professor@preofessor.com",
                            is_active = true,
                            name = "instrutor 1",
                            password = "$2a$11$5UW8o5Z/NSHO9TOtCmN6Xucq2C7ts2EJnSPDuVudnDNhbwnP2tm7.",
                            phone = 123456789.0
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.User_Plan", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("clientId")
                        .HasColumnType("uuid")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<Guid>("subscriptionplanId")
                        .HasColumnType("uuid")
                        .HasColumnName("subscriptionplan_id");

                    b.HasKey("id")
                        .HasName("pk_user_plan");

                    b.HasIndex("clientId")
                        .HasDatabaseName("ix_user_plan_client_id");

                    b.HasIndex("subscriptionplanId")
                        .HasDatabaseName("ix_user_plan_subscriptionplan_id");

                    b.ToTable("user_plan", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("38929834-cbb6-4ee0-be99-c56ddfed8ec6"),
                            clientId = new Guid("c2826cc4-83bb-4044-861e-d514e0d9cb12"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8651),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("8c367272-b400-4a63-a439-fd8ff2664cdf"),
                            clientId = new Guid("06dab68d-f78a-4d32-9adb-e70d1635db37"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8661),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("2c31f90d-1fe7-46e1-b679-911b8247d6fc"),
                            clientId = new Guid("76fa18d5-76d4-48ef-855a-f95ef6b0e16f"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8663),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("539a7c41-41b7-4cca-a44c-5f8dccc1a4e9"),
                            clientId = new Guid("745d07c7-ac23-4d7e-b1cf-50f3f83559ff"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8671),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("1c894587-5877-4663-9aa3-d2740b27b14a"),
                            clientId = new Guid("603d97a6-d7c7-4603-b1ea-e089cd598e55"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8672),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("75e06734-9240-4b6d-adc4-18805aca16b4"),
                            clientId = new Guid("61138fb4-8f75-4660-ac87-4bb9d5d700eb"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8675),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("5f80dca0-80bf-4d1e-9474-d60730eaa2da"),
                            clientId = new Guid("7d2367bc-624b-4422-9033-2f7aeaf62957"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8676),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("b78ed46f-12aa-4513-839b-912412b61ed2"),
                            clientId = new Guid("e078d2bc-3094-450b-b487-d19c860cdb07"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8677),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("03b23270-4dbd-43fc-830b-dfcb7037c8cc"),
                            clientId = new Guid("1f3bb6ef-0e4d-472b-8ce5-056a4e07ba8b"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8678),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("11a258a2-9b38-4268-8302-ce80cf12584b"),
                            clientId = new Guid("b6468a7d-f7a8-49ae-af12-0e82dfd2e7d1"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8680),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("beb26b96-2761-485a-a34d-a03580d69e3c"),
                            clientId = new Guid("1490584f-0fab-447e-83eb-89314094ab21"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8682),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("e72f925c-e710-4ecb-a8ce-932d151610ea"),
                            clientId = new Guid("5b00b9c0-7230-43f6-bc2e-49a5426bf460"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8685),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("344868a4-d786-4c01-b84f-37d0919f33e9"),
                            clientId = new Guid("b3ff21b3-802a-47fb-8fd3-16704d7d0b08"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8687),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("aa352818-5ff6-4e47-99d6-f767efc196af"),
                            clientId = new Guid("3d9e9689-e9de-436c-bcd5-efacc3d70c9d"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8688),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("12624343-ed02-463e-9c5e-c4167b9e94bb"),
                            clientId = new Guid("60e57af1-b754-40be-aa00-916fdba13b07"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8689),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("842f05d8-7854-417b-824d-d5367b060b84"),
                            clientId = new Guid("f4348943-5382-4e3b-a6dc-f19e886ab3d5"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8691),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("84cc1a3c-ca56-4f71-b51b-6f4682336130"),
                            clientId = new Guid("b544dcdd-644c-4820-81cb-6ab91f257ea8"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8692),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("b8d23285-9cfa-4b2a-a8ac-634336e59c83"),
                            clientId = new Guid("6c7c7298-3aa7-4704-9b3e-8824251b700b"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8694),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("0490cab0-8087-45ff-a5a2-6db6cce14372"),
                            clientId = new Guid("33cdaa80-55b6-4ca9-ab73-4f50c987bb5d"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8695),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("2f18e911-723a-448e-b5a4-c722d42f0f6e"),
                            clientId = new Guid("54ac2069-a5ef-48c3-bce9-232990261c8d"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8698),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("40b67821-97aa-4748-a570-ac851807c0f7"),
                            clientId = new Guid("e4c5516e-08ba-4d8a-a38c-143e97d40bc2"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8699),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("259ce02a-9c5f-4ed9-89cf-7c6268fa8aba"),
                            clientId = new Guid("64a129cb-46fd-4310-b2ec-d9ef2242bb9b"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8700),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("39d7857c-4e35-41d2-8cf9-cb5ed3d4fad0"),
                            clientId = new Guid("bee7210e-b8e9-47ab-a639-a287c9951965"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8701),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("becc457e-339e-489e-b3f2-101b01772ccd"),
                            clientId = new Guid("021268c0-83d4-4f9f-a9f0-71e2235d885f"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8702),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("d8be2296-a27a-4820-b98a-9066e9f1d8d2"),
                            clientId = new Guid("3a98c066-64ad-4c35-b29b-8604d3416eab"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8704),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("78a14c71-20c0-48f0-8f9c-154b2425b5cd"),
                            clientId = new Guid("a69261dd-e038-42bc-92e2-61914a5d7747"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8705),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("45b0964d-76d4-4d23-a815-ebb4e0df54ac"),
                            clientId = new Guid("5f1af3b5-5603-4836-a8f4-48cc5e4c5502"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8706),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("1d6f5521-351e-4d36-b057-43821856f61f"),
                            clientId = new Guid("e42da487-2462-4cd9-b9c8-12eb1fe7d7c4"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8709),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("a519e04f-f30b-4718-82ff-765ae1492578"),
                            clientId = new Guid("d36f6966-a25b-42c0-967e-ab93b3618934"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8710),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("43fc3968-5ac7-478f-9eaa-c5abcc4d55c8"),
                            clientId = new Guid("12691ae7-3280-4e8e-b2a1-9aa701b1f531"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8711),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("a5aaa7da-9763-4bab-9024-52df3e76ce4a"),
                            clientId = new Guid("8176d792-a593-421a-ba2e-61844a68d105"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8712),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("3d158940-96d1-48d8-bab1-97a3bc18db0a"),
                            clientId = new Guid("936bf493-fd2c-4856-a592-b08ab9ff02b7"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8714),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("4bf45356-ec8b-47db-afae-90dc9be3b9da"),
                            clientId = new Guid("a37496f8-ea2b-467d-bf43-fe9964ad2201"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8715),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("9182e740-4cb1-44db-b34b-0ec9461838cc"),
                            clientId = new Guid("a9fcf073-661d-4ba3-8533-266a7c394497"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8717),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("57c5d90c-5a97-463c-bec6-c73d2b6bb19a"),
                            clientId = new Guid("3dd6df18-b6a4-492d-9dac-00ca3697c470"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8733),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("975c9d97-545c-44ba-b443-b034664b4ff2"),
                            clientId = new Guid("f64e0269-98f0-4585-9c36-a2a1a83bbec6"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8737),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("72151e6c-a854-4560-b880-1485ce0fe0f7"),
                            clientId = new Guid("30a2c535-36d5-489c-a87c-f3978fbc667b"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8738),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("88a711dd-e409-4f5c-82b9-c38d07e26b34"),
                            clientId = new Guid("3501a2fa-2cd5-44eb-a974-58fcc2fbcc9d"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8740),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("65d4ea8b-7f9a-47d8-96ac-1ed1c1529b23"),
                            clientId = new Guid("df9a1039-997d-43cb-a478-ab546be639e0"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8741),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("385be3ef-abfa-4597-8d1c-b8efe237a779"),
                            clientId = new Guid("38394761-5998-46c5-96d6-a5e976f224fa"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8742),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("e99a3e6f-6d25-4d8a-a22b-cb3d1f9ef214"),
                            clientId = new Guid("7d20cf2d-b2c8-4f41-b594-d7d00d4791eb"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8744),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("82b379b4-c005-4872-9353-160ecc501aad"),
                            clientId = new Guid("f8fb8452-25fd-4d71-8d4f-9238ebd2e2f5"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8745),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("b852527a-e075-4b35-bbbd-d27e4bf642ee"),
                            clientId = new Guid("210210a8-a789-411d-94b0-d4e35f0a0931"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8746),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("716b40ef-f273-404e-8d6c-c56927f31003"),
                            clientId = new Guid("00911f0f-6bc8-4c26-a206-acebd6430a95"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8749),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("dacfd6a7-d67a-48c0-b94c-861ae22ffa11"),
                            clientId = new Guid("c337f99a-dde4-40d3-92bb-a2751c2f739e"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8750),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("9b95ce20-2dba-452e-a704-c8a7f27ec036"),
                            clientId = new Guid("97db8e0f-a9ad-4a75-a683-268aaa21bd52"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8751),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("2b685eec-1f7f-4f0f-b546-2df07fce4eec"),
                            clientId = new Guid("dd359ef5-e93d-4b0f-bf2b-26e870330290"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8753),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("25f46a3a-b989-4a10-a7ff-839acc770fd1"),
                            clientId = new Guid("27dff1f7-831e-4845-9b04-0de21399cf05"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8754),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("34083c48-621f-4341-a96c-165bd1844f85"),
                            clientId = new Guid("31480649-94fe-4886-afc9-4b94e37c0dc5"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8755),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        },
                        new
                        {
                            id = new Guid("ecc65dd4-cdc8-4539-b671-36d670b5cb2c"),
                            clientId = new Guid("35842473-4354-41b7-9b2e-d5f31654d234"),
                            created_at = new DateTime(2024, 9, 4, 12, 57, 6, 869, DateTimeKind.Local).AddTicks(8756),
                            is_active = true,
                            subscriptionplanId = new Guid("6f71e3d5-1b1b-4458-99ed-bd8d95be1165")
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Video", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("duration")
                        .HasColumnType("text")
                        .HasColumnName("duration");

                    b.Property<Guid>("moduleId")
                        .HasColumnType("uuid")
                        .HasColumnName("module_id");

                    b.Property<int>("order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<string>("title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("videoUrl")
                        .HasColumnType("text")
                        .HasColumnName("video_url");

                    b.HasKey("id")
                        .HasName("pk_videos");

                    b.HasIndex("moduleId")
                        .HasDatabaseName("ix_videos_module_id");

                    b.ToTable("videos", (string)null);
                });

            modelBuilder.Entity("ModuleProgress", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("courseProgressId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_progress_id");

                    b.Property<bool>("done")
                        .HasColumnType("boolean")
                        .HasColumnName("done");

                    b.Property<Guid>("moduleId")
                        .HasColumnType("uuid")
                        .HasColumnName("module_id");

                    b.HasKey("id")
                        .HasName("pk_modules_progress");

                    b.HasIndex("courseProgressId")
                        .HasDatabaseName("ix_modules_progress_course_progress_id");

                    b.HasIndex("moduleId")
                        .HasDatabaseName("ix_modules_progress_module_id");

                    b.ToTable("modules_progress", (string)null);
                });

            modelBuilder.Entity("VideoProgress", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("done")
                        .HasColumnType("boolean")
                        .HasColumnName("done");

                    b.Property<Guid>("moduleId")
                        .HasColumnType("uuid")
                        .HasColumnName("module_id");

                    b.Property<Guid>("videoId")
                        .HasColumnType("uuid")
                        .HasColumnName("video_id");

                    b.HasKey("id")
                        .HasName("pk_video_progresses");

                    b.HasIndex("moduleId")
                        .HasDatabaseName("ix_video_progresses_module_id");

                    b.HasIndex("videoId")
                        .HasDatabaseName("ix_video_progresses_video_id");

                    b.ToTable("video_progresses", (string)null);
                });

            modelBuilder.Entity("CourseProgress", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_progresses_courses_course_id");

                    b.HasOne("GenericCourses.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_progresses_users_user_id");

                    b.Navigation("Course");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Admin", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_admins_users_user_id");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.BlogPost", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Instructor", "instructor")
                        .WithMany("posts")
                        .HasForeignKey("instructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_blog_posts_instructors_instructor_id");

                    b.Navigation("instructor");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Category", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_categories_users_user_id");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Certificate", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Course", "course")
                        .WithMany()
                        .HasForeignKey("courseId")
                        .HasConstraintName("fk_certificates_courses_course_id");

                    b.HasOne("GenericCourses.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_certificates_users_user_id");

                    b.Navigation("course");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Client", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Subscriptionplan", null)
                        .WithMany("clients")
                        .HasForeignKey("Subscriptionplanid")
                        .HasConstraintName("fk_clients_subscription_plans_subscriptionplanid");

                    b.HasOne("GenericCourses.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_clients_users_user_id");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Comment", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.BlogPost", "blogPost")
                        .WithMany("comments")
                        .HasForeignKey("blogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comments_blog_posts_blog_post_id");

                    b.Navigation("blogPost");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Course", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Instructor", "instructor")
                        .WithMany()
                        .HasForeignKey("instructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_courses_instructors_instructor_id");

                    b.Navigation("instructor");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.CourseCategory", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_categories_categories_category_id");

                    b.HasOne("GenericCourses.Domain.Entities.Course", "course")
                        .WithMany("courseCategories")
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_categories_courses_course_id");

                    b.Navigation("category");

                    b.Navigation("course");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Instructor", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_instructors_users_user_id");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Module", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Course", "course")
                        .WithMany("modules")
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_modules_courses_course_id");

                    b.Navigation("course");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.PostCategory", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.BlogPost", "blogPost")
                        .WithMany("postCategories")
                        .HasForeignKey("blogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_post_categories_blog_posts_blog_post_id");

                    b.HasOne("GenericCourses.Domain.Entities.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_post_categories_categories_category_id");

                    b.Navigation("blogPost");

                    b.Navigation("category");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Review", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Client", "client")
                        .WithMany("reviews")
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_clients_client_id");

                    b.HasOne("GenericCourses.Domain.Entities.Course", "course")
                        .WithMany("reviews")
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_courses_course_id");

                    b.Navigation("client");

                    b.Navigation("course");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Subscriptionplan", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Admin", "admin")
                        .WithMany()
                        .HasForeignKey("adminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_subscription_plans_admins_admin_id");

                    b.Navigation("admin");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.User_Plan", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Client", "client")
                        .WithMany()
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_plan_clients_client_id");

                    b.HasOne("GenericCourses.Domain.Entities.Subscriptionplan", "subscriptionplan")
                        .WithMany()
                        .HasForeignKey("subscriptionplanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_plan_subscription_plans_subscriptionplan_id");

                    b.Navigation("client");

                    b.Navigation("subscriptionplan");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Video", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Module", null)
                        .WithMany("videos")
                        .HasForeignKey("moduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_videos_modules_module_id");
                });

            modelBuilder.Entity("ModuleProgress", b =>
                {
                    b.HasOne("CourseProgress", "course_progress")
                        .WithMany()
                        .HasForeignKey("courseProgressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_modules_progress_course_progresses_course_progress_id");

                    b.HasOne("GenericCourses.Domain.Entities.Module", "module")
                        .WithMany()
                        .HasForeignKey("moduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_modules_progress_modules_module_id");

                    b.Navigation("course_progress");

                    b.Navigation("module");
                });

            modelBuilder.Entity("VideoProgress", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Module", "module")
                        .WithMany()
                        .HasForeignKey("moduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_video_progresses_modules_module_id");

                    b.HasOne("GenericCourses.Domain.Entities.Video", "video")
                        .WithMany()
                        .HasForeignKey("videoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_video_progresses_videos_video_id");

                    b.Navigation("module");

                    b.Navigation("video");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.BlogPost", b =>
                {
                    b.Navigation("comments");

                    b.Navigation("postCategories");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Client", b =>
                {
                    b.Navigation("reviews");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Course", b =>
                {
                    b.Navigation("courseCategories");

                    b.Navigation("modules");

                    b.Navigation("reviews");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Instructor", b =>
                {
                    b.Navigation("posts");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Module", b =>
                {
                    b.Navigation("videos");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Subscriptionplan", b =>
                {
                    b.Navigation("clients");
                });
#pragma warning restore 612, 618
        }
    }
}
