// <auto-generated />
using System;
using GenericCourses.Infra.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GenericCourses.Infra.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240601134914_betterCategories")]
    partial class betterCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseProgress", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("courseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.Property<bool>("done")
                        .HasColumnType("boolean")
                        .HasColumnName("done");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_course_progresses");

                    b.HasIndex("courseId")
                        .HasDatabaseName("ix_course_progresses_course_id");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_course_progresses_user_id");

                    b.ToTable("course_progresses", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Admin", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_admins");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_admins_user_id");

                    b.ToTable("admins", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("9062972e-5c16-4ce6-a79a-5d6428e9d95f"),
                            userId = new Guid("f9e2e7db-4b4b-47c5-83f4-876adb1cac0f")
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.BlogPost", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("acesses")
                        .HasColumnType("integer")
                        .HasColumnName("acesses");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<Guid>("instructorId")
                        .HasColumnType("uuid")
                        .HasColumnName("instructor_id");

                    b.Property<string>("text")
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<string>("thumb")
                        .HasColumnType("text")
                        .HasColumnName("thumb");

                    b.Property<string>("title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("id")
                        .HasName("pk_blog_posts");

                    b.HasIndex("instructorId")
                        .HasDatabaseName("ix_blog_posts_instructor_id");

                    b.ToTable("blog_posts", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Certificate", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("courseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("emited_at")
                        .HasColumnType("Date")
                        .HasColumnName("emited_at");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_certificates");

                    b.HasIndex("courseId")
                        .HasDatabaseName("ix_certificates_course_id");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_certificates_user_id");

                    b.ToTable("certificates", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("subscriptionplanId")
                        .HasColumnType("uuid")
                        .HasColumnName("subscriptionplan_id");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_clients");

                    b.HasIndex("subscriptionplanId")
                        .HasDatabaseName("ix_clients_subscriptionplan_id");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_clients_user_id");

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("blogPostId")
                        .HasColumnType("uuid")
                        .HasColumnName("blog_post_id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("id")
                        .HasName("pk_comments");

                    b.HasIndex("blogPostId")
                        .HasDatabaseName("ix_comments_blog_post_id");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("duration")
                        .HasColumnType("text")
                        .HasColumnName("duration");

                    b.Property<Guid>("instructorId")
                        .HasColumnType("uuid")
                        .HasColumnName("instructor_id");

                    b.Property<bool>("is_free")
                        .HasColumnType("boolean")
                        .HasColumnName("is_free");

                    b.Property<DateTime>("lastupdate")
                        .HasColumnType("Date")
                        .HasColumnName("lastupdate");

                    b.Property<string>("thumb")
                        .HasColumnType("text")
                        .HasColumnName("thumb");

                    b.Property<string>("title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("id")
                        .HasName("pk_courses");

                    b.HasIndex("instructorId")
                        .HasDatabaseName("ix_courses_instructor_id");

                    b.ToTable("courses", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.CourseCategory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("categoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<Guid>("courseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.HasKey("id")
                        .HasName("pk_course_ategories");

                    b.HasIndex("categoryId")
                        .HasDatabaseName("ix_course_ategories_category_id");

                    b.HasIndex("courseId")
                        .HasDatabaseName("ix_course_ategories_course_id");

                    b.ToTable("course_ategories", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Instructor", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("github")
                        .HasColumnType("text")
                        .HasColumnName("github");

                    b.Property<string>("social_network")
                        .HasColumnType("text")
                        .HasColumnName("social_network");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_instructors");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_instructors_user_id");

                    b.ToTable("instructors", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("b8ccf4dc-da9a-4e03-a79a-3b304456e192"),
                            userId = new Guid("cf74d782-c506-4fd7-b57a-309dd43753e4")
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Module", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("Courseid")
                        .HasColumnType("uuid")
                        .HasColumnName("courseid");

                    b.Property<bool>("complete")
                        .HasColumnType("boolean")
                        .HasColumnName("complete");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<string>("title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("id")
                        .HasName("pk_modules");

                    b.HasIndex("Courseid")
                        .HasDatabaseName("ix_modules_courseid");

                    b.ToTable("modules", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.PostCategory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("blogPostId")
                        .HasColumnType("uuid")
                        .HasColumnName("blog_post_id");

                    b.Property<Guid>("categoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.HasKey("id")
                        .HasName("pk_post_categories");

                    b.HasIndex("blogPostId")
                        .HasDatabaseName("ix_post_categories_blog_post_id");

                    b.HasIndex("categoryId")
                        .HasDatabaseName("ix_post_categories_category_id");

                    b.ToTable("post_categories", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Review", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("clientId")
                        .HasColumnType("uuid")
                        .HasColumnName("client_id");

                    b.Property<Guid>("courseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("id")
                        .HasName("pk_reviews");

                    b.HasIndex("clientId")
                        .HasDatabaseName("ix_reviews_client_id");

                    b.HasIndex("courseId")
                        .HasDatabaseName("ix_reviews_course_id");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Subscriptionplan", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("months")
                        .HasColumnType("integer")
                        .HasColumnName("months");

                    b.Property<float>("price")
                        .HasColumnType("real")
                        .HasColumnName("price");

                    b.HasKey("id")
                        .HasName("pk_subscription_plans");

                    b.ToTable("subscription_plans", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("13c526f8-1340-41eb-a42e-b8c46eb432a6"),
                            created_at = new DateTime(2024, 6, 1, 10, 49, 14, 479, DateTimeKind.Local).AddTicks(2238),
                            description = "Free",
                            months = 0,
                            price = 0f
                        },
                        new
                        {
                            id = new Guid("330dc11c-fb7f-496d-9288-b41d40a897b3"),
                            created_at = new DateTime(2024, 6, 1, 10, 49, 14, 479, DateTimeKind.Local).AddTicks(2246),
                            description = "Mensal",
                            months = 1,
                            price = 35f
                        },
                        new
                        {
                            id = new Guid("7d0658a0-290e-4de0-8213-845c026f6e52"),
                            created_at = new DateTime(2024, 6, 1, 10, 49, 14, 479, DateTimeKind.Local).AddTicks(2254),
                            description = "Anual",
                            months = 1,
                            price = 399.99f
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<double>("cpf")
                        .HasColumnType("double precision")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<double?>("phone")
                        .HasColumnType("double precision")
                        .HasColumnName("phone");

                    b.HasKey("id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("ed36995e-a468-4e50-ad74-b6664d747994"),
                            cpf = 57384090270.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 8, 520, DateTimeKind.Local).AddTicks(4393),
                            email = "Esther.Braga@yahoo.com",
                            is_active = true,
                            name = "Enzo Gabriel Pereira",
                            password = "$2a$11$PM/BXokowvi3Iak7gcqIFOy17CgfFqFQoP1o8Ujh2taJ0uh2gHySq",
                            phone = 8967714982.0
                        },
                        new
                        {
                            id = new Guid("111f0150-db58-44e9-9cec-938aba838877"),
                            cpf = 15893123506.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 8, 637, DateTimeKind.Local).AddTicks(8926),
                            email = "Gubio.Silva@gmail.com",
                            is_active = true,
                            name = "Feliciano Albuquerque",
                            password = "$2a$11$dt7uvhPKvHBgs/XuFK2G6OpcV/XhAlatZDBHTm63jnZjaBRxezLle",
                            phone = 1847596099.0
                        },
                        new
                        {
                            id = new Guid("a268a632-c679-4a9e-b1cd-ed6127255230"),
                            cpf = 88137564888.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 8, 754, DateTimeKind.Local).AddTicks(8258),
                            email = "Isadora.Saraiva@yahoo.com",
                            is_active = true,
                            name = "Maria Helena Albuquerque",
                            password = "$2a$11$eZLXLndn1e9Yjy2rUIfCcue.T/bAtw/sxNaHVS7lhHv5CogcLcSSO",
                            phone = 6127437075.0
                        },
                        new
                        {
                            id = new Guid("ac63d553-a3ab-4a61-9b9b-5b74bf8631af"),
                            cpf = 34646687976.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 8, 871, DateTimeKind.Local).AddTicks(9997),
                            email = "Raul.Macedo84@bol.com.br",
                            is_active = true,
                            name = "Janaína Nogueira",
                            password = "$2a$11$yXgD1DJiivDZcdWmexIbnuSiX51gaPoDWgZ.F4R4AC8xFW0/p7bo2",
                            phone = 9297037096.0
                        },
                        new
                        {
                            id = new Guid("799b0e7c-55c3-4e71-a25e-eab6d04f2858"),
                            cpf = 49518280223.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 8, 988, DateTimeKind.Local).AddTicks(8608),
                            email = "AnaLaura_Xavier@bol.com.br",
                            is_active = true,
                            name = "Maria Alice Souza",
                            password = "$2a$11$9aJ603O3hWFWg.j7BnAVFObGtKTY4mVSgBVMAovuekPqcnaaSL8qu",
                            phone = 90057802197.0
                        },
                        new
                        {
                            id = new Guid("448a581c-e346-44d5-aa15-9b8a333aee6c"),
                            cpf = 44504509571.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 9, 105, DateTimeKind.Local).AddTicks(9546),
                            email = "Caio.Santos@yahoo.com",
                            is_active = true,
                            name = "Guilherme Carvalho",
                            password = "$2a$11$4Yp4DF71hpIS33jWiaMIeuVTL5ZxsuRie9fMYs3ECLDnCu5oeQoIi",
                            phone = 97922354513.0
                        },
                        new
                        {
                            id = new Guid("0e2858df-3931-4c99-ad72-3b90c4184629"),
                            cpf = 64412016668.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 9, 223, DateTimeKind.Local).AddTicks(1864),
                            email = "Nubia_Batista19@gmail.com",
                            is_active = true,
                            name = "Helena Oliveira",
                            password = "$2a$11$DIwmIYPOhUwVAg4eEhNQS.HrC4mdoaJ8UAMJHgBJdQZqhxXz7JBZK",
                            phone = 553944617502.0
                        },
                        new
                        {
                            id = new Guid("a0cd559f-efe5-4ea0-b116-d312a1c53d7a"),
                            cpf = 89889023946.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 9, 339, DateTimeKind.Local).AddTicks(9191),
                            email = "Pedro_Batista82@bol.com.br",
                            is_active = true,
                            name = "Fabrício Silva",
                            password = "$2a$11$6LMmNcD0K3eoaftXTsWHWe/R4Rum6Z8BYZ.HgtEpGjk9.HrBTBxX6",
                            phone = 4923730802.0
                        },
                        new
                        {
                            id = new Guid("2961b926-355a-48c5-a0a3-1d06c0a1a912"),
                            cpf = 49364543890.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 9, 456, DateTimeKind.Local).AddTicks(4458),
                            email = "Bernardo_Carvalho@gmail.com",
                            is_active = true,
                            name = "Natália Moreira",
                            password = "$2a$11$nvZG.2x3evAbAsUFCmSMXuh02UBXVze4jJmy5VsjetXmCCLjAZuxW",
                            phone = 554123350742.0
                        },
                        new
                        {
                            id = new Guid("53a5c92b-643c-4cbe-8420-df2ed90549b3"),
                            cpf = 7146101606.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 9, 573, DateTimeKind.Local).AddTicks(793),
                            email = "Ricardo.Santos@gmail.com",
                            is_active = true,
                            name = "Emanuelly Macedo",
                            password = "$2a$11$9nC2XslkSRakcGvQSysBKuKHVb8HJSp2uZV9cLdJUs4OK1hAQYGXa",
                            phone = 4592812946.0
                        },
                        new
                        {
                            id = new Guid("9ac15346-2262-4983-b1c0-2520895b8e38"),
                            cpf = 60194064905.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 9, 689, DateTimeKind.Local).AddTicks(9356),
                            email = "Henrique.Moraes56@live.com",
                            is_active = true,
                            name = "Pietro Saraiva",
                            password = "$2a$11$0oWWveAgBMWrWUYN/nFp0eCbuiIZV0214rPyxMkG4L5eqQFzb9nMK",
                            phone = 82991166922.0
                        },
                        new
                        {
                            id = new Guid("918a1288-aee4-48fb-b919-550be6beee98"),
                            cpf = 27370027023.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 9, 806, DateTimeKind.Local).AddTicks(7830),
                            email = "Natalia_Silva@bol.com.br",
                            is_active = true,
                            name = "Maria Carvalho",
                            password = "$2a$11$I/lf43E4mCW9jsVrQbDbX.8yUzS4ZJZE6RdDq/O2BRi1wmqzfhfNO",
                            phone = 554263380152.0
                        },
                        new
                        {
                            id = new Guid("2776b456-c766-48eb-95e2-d64dcf52eac3"),
                            cpf = 52597925480.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 9, 923, DateTimeKind.Local).AddTicks(5747),
                            email = "Antonella75@yahoo.com",
                            is_active = true,
                            name = "Lorena Braga",
                            password = "$2a$11$0EZQy1f4GWwYtRCQCbB3x.JCbZ0mJH5Yvj8eOsIH24EleVLNu3eV6",
                            phone = 8615903247.0
                        },
                        new
                        {
                            id = new Guid("085c8b7b-6bc3-49c5-8b6d-160e30008eae"),
                            cpf = 64533712002.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 10, 40, DateTimeKind.Local).AddTicks(3934),
                            email = "Isabella.Santos@gmail.com",
                            is_active = true,
                            name = "Emanuel Melo",
                            password = "$2a$11$0vetKFKwEytMJhDHbKhUsOOEKO12Jt9tXr.eE.mz11PVuxDy5FFR.",
                            phone = 552915101422.0
                        },
                        new
                        {
                            id = new Guid("34e4e05d-805b-4700-b433-8d7d2d8b7f56"),
                            cpf = 68807365723.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 10, 157, DateTimeKind.Local).AddTicks(1459),
                            email = "Enzo98@yahoo.com",
                            is_active = true,
                            name = "Maria Nogueira",
                            password = "$2a$11$S2oUorXV9UzgVnNcQ4OUfefp8Ld/KCQPZ/5u0QNqdwTGgEJEVWoY2",
                            phone = 552814895823.0
                        },
                        new
                        {
                            id = new Guid("0529c9cf-7fff-4fc5-afcd-298cc0358ad8"),
                            cpf = 18879326155.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 10, 273, DateTimeKind.Local).AddTicks(7067),
                            email = "Felipe.Martins@gmail.com",
                            is_active = true,
                            name = "Rebeca Macedo",
                            password = "$2a$11$eMq5wyne2y5a/d3rITJ5DuYWKap1sZOgeA0o1PgmBv2maM.A..nEW",
                            phone = 78789884965.0
                        },
                        new
                        {
                            id = new Guid("4cd935a4-f0df-4f3a-9a62-fe06f1d4b064"),
                            cpf = 3868807438.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 10, 390, DateTimeKind.Local).AddTicks(3963),
                            email = "Vicente_Santos67@bol.com.br",
                            is_active = true,
                            name = "Ana Clara Barros",
                            password = "$2a$11$DxcogLt/Lk4tBRPCastYfOdtZ9Q6C9mDw/Jv1Yf/vA9a/0UjSIjbK",
                            phone = 6486870016.0
                        },
                        new
                        {
                            id = new Guid("39352718-d523-4ca9-b4b2-b75a7936be9a"),
                            cpf = 52572968371.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 10, 507, DateTimeKind.Local).AddTicks(1732),
                            email = "Ladislau57@hotmail.com",
                            is_active = true,
                            name = "Enzo Reis",
                            password = "$2a$11$yAD2xuYJ.jMwbO9dcElWluRDm6Asc5PJIi6OtlQGHYdLx8PDRGz1u",
                            phone = 7131570833.0
                        },
                        new
                        {
                            id = new Guid("44d797be-5406-4456-a294-b0c1339f0c7e"),
                            cpf = 95710413356.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 10, 624, DateTimeKind.Local).AddTicks(1077),
                            email = "Elisio.Pereira@yahoo.com",
                            is_active = true,
                            name = "Alícia Melo",
                            password = "$2a$11$iqR2L2Dp/1ez5K6vvs7iouad8tEO9vBYtaJWy.UWGfYli1mZTplZW",
                            phone = 554583208435.0
                        },
                        new
                        {
                            id = new Guid("ea26f5c3-a054-4caa-9ef8-fb3883e1e4ce"),
                            cpf = 87118269328.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 10, 740, DateTimeKind.Local).AddTicks(7923),
                            email = "Heloisa.Reis@bol.com.br",
                            is_active = true,
                            name = "Daniel Melo",
                            password = "$2a$11$AYBY0hX6zImt6JcHKpY5puJTysdTD9h2jHCysBiml2lCJBG2lhDFq",
                            phone = 556413975747.0
                        },
                        new
                        {
                            id = new Guid("7e1bef5a-6213-4763-baaa-041ba1fbc1d7"),
                            cpf = 38068549471.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 10, 857, DateTimeKind.Local).AddTicks(4348),
                            email = "Roberta84@live.com",
                            is_active = true,
                            name = "Bryan Oliveira",
                            password = "$2a$11$q4On46GPC/HHtP3WeckjAeDoE/8RL.kdsE5xKLnMcXvN6FXhvZBom",
                            phone = 556341028930.0
                        },
                        new
                        {
                            id = new Guid("a5289d71-1d84-46f1-82d2-3e9ef6113bf7"),
                            cpf = 25805010372.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 10, 975, DateTimeKind.Local).AddTicks(1906),
                            email = "Marcos.Martins30@bol.com.br",
                            is_active = true,
                            name = "Nicolas Xavier",
                            password = "$2a$11$D4cFM4OW60ve67ZUUQbCIOt9qvYSfm28q.mJrNH3lKU2P6QBAisk6",
                            phone = 3539223007.0
                        },
                        new
                        {
                            id = new Guid("828039a1-d150-4cb7-9886-330713e8cde2"),
                            cpf = 91487108656.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 11, 92, DateTimeKind.Local).AddTicks(1312),
                            email = "Bernardo47@hotmail.com",
                            is_active = true,
                            name = "João Lucas Melo",
                            password = "$2a$11$0iEetbjvHJud7zhdhEzdc.DiMnvvbtwnvNr4OCyYRKyi0RYAPJw0y",
                            phone = 46070270638.0
                        },
                        new
                        {
                            id = new Guid("65a4d6fc-b737-46a2-bbd1-16c949768825"),
                            cpf = 36858829539.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 11, 208, DateTimeKind.Local).AddTicks(8734),
                            email = "Meire52@live.com",
                            is_active = true,
                            name = "Alessandra Costa",
                            password = "$2a$11$8WYCLqN0BMJx28X.o8kT7uLf7p8OmzAS2/FR5j.c/rI5WG4iGp9hW",
                            phone = 62952333903.0
                        },
                        new
                        {
                            id = new Guid("44bd8a10-4c59-4eb0-bb0e-fe990b353b0a"),
                            cpf = 70634847104.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 11, 325, DateTimeKind.Local).AddTicks(5650),
                            email = "Roberta_Melo63@yahoo.com",
                            is_active = true,
                            name = "Isis Nogueira",
                            password = "$2a$11$gWrjup/mLXpvNPsgCoe/BOk1wLXUCQeZfB9QE/ZJEdtVk2XWEjUKW",
                            phone = 555180035400.0
                        },
                        new
                        {
                            id = new Guid("23760e3e-13ad-421d-9071-7abebb03130f"),
                            cpf = 8979903901.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 11, 442, DateTimeKind.Local).AddTicks(1951),
                            email = "Carla76@gmail.com",
                            is_active = true,
                            name = "Carla Saraiva",
                            password = "$2a$11$NaNn5Loqw.q9au.0mH6mOugjjOlbLtyyS2Zf1o18Lrl/uN7rqaLum",
                            phone = 6365847289.0
                        },
                        new
                        {
                            id = new Guid("808b31ce-41a3-4c24-b221-aca9f44016b3"),
                            cpf = 3240115476.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 11, 559, DateTimeKind.Local).AddTicks(87),
                            email = "Leonardo67@yahoo.com",
                            is_active = true,
                            name = "Antonella Reis",
                            password = "$2a$11$doiBSP87EdYoEiZLE8yb0uFNP7WFXXjO9aaqojXjCybl4XtD9U2cq",
                            phone = 19187602867.0
                        },
                        new
                        {
                            id = new Guid("107375ad-0a39-4304-8781-d048f4770b17"),
                            cpf = 3285198397.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 11, 675, DateTimeKind.Local).AddTicks(8257),
                            email = "JoaoPedro39@yahoo.com",
                            is_active = true,
                            name = "Rafaela Xavier",
                            password = "$2a$11$iR/t6XED4SssyOvswRDRCOD1LV.yKLsAfdqLQyHmBnDJRbkHscn2a",
                            phone = 95573215187.0
                        },
                        new
                        {
                            id = new Guid("f479f204-c514-4274-84dc-75cd111ed519"),
                            cpf = 77988078615.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 11, 792, DateTimeKind.Local).AddTicks(6224),
                            email = "MariaJulia70@hotmail.com",
                            is_active = true,
                            name = "Meire Melo",
                            password = "$2a$11$Femd/nnm.XElZxIToVMSwe9rpfUnUPzN9BlmMN4tLhSjd1lqJRcB6",
                            phone = 550941499494.0
                        },
                        new
                        {
                            id = new Guid("3a798bb8-d883-4fb0-a84d-0064edb34ce5"),
                            cpf = 53537158459.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 11, 909, DateTimeKind.Local).AddTicks(4024),
                            email = "MariaJulia.Melo51@yahoo.com",
                            is_active = true,
                            name = "Valentina Melo",
                            password = "$2a$11$H5t/E72P.VhcuyT3M6HwO.iqXOfurveGX2m/IfZh0fqcxeWkNqike",
                            phone = 8075529992.0
                        },
                        new
                        {
                            id = new Guid("6faf95e0-dd4a-48b1-b33a-1ffc34d21441"),
                            cpf = 90912366478.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 12, 26, DateTimeKind.Local).AddTicks(4337),
                            email = "Silas7@hotmail.com",
                            is_active = true,
                            name = "Rafaela Pereira",
                            password = "$2a$11$9cmNISpNDes8TxN8TQ9zPeKzNkmXuHFnn8fnipo.7W.DNjygnKtDq",
                            phone = 1880819735.0
                        },
                        new
                        {
                            id = new Guid("51f48c2d-e8c6-4cd6-8bd7-09c3b95b9ba7"),
                            cpf = 18416455678.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 12, 143, DateTimeKind.Local).AddTicks(3944),
                            email = "Ricardo70@gmail.com",
                            is_active = true,
                            name = "Felícia Xavier",
                            password = "$2a$11$vxkNk1194N.NXOahaPytvOYlwdTB1HiKcLpevrpLCKNrTqsB2dipe",
                            phone = 556821742974.0
                        },
                        new
                        {
                            id = new Guid("ec3d2502-255a-426b-b417-3923c8977554"),
                            cpf = 35391153158.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 12, 260, DateTimeKind.Local).AddTicks(7243),
                            email = "Joaquim99@bol.com.br",
                            is_active = true,
                            name = "Alice Carvalho",
                            password = "$2a$11$IoUsmCWI2Ha3T84ZkgSRYOdb5/fWpflan1YgCTjDg6rj4Nj6nPcZG",
                            phone = 20566982224.0
                        },
                        new
                        {
                            id = new Guid("ad07470b-9465-4654-bb56-dfda4d87c3cb"),
                            cpf = 22993138936.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 12, 378, DateTimeKind.Local).AddTicks(2799),
                            email = "Marcelo30@hotmail.com",
                            is_active = true,
                            name = "Felícia Batista",
                            password = "$2a$11$gbAE1RHmDk8yssB3nxyJpOR7y2UwhI8wvSh1Cv8M2aoJVHnWmv5ae",
                            phone = 6886531208.0
                        },
                        new
                        {
                            id = new Guid("893fcd6a-5920-4fd6-b782-bd5be77f5610"),
                            cpf = 88387103926.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 12, 494, DateTimeKind.Local).AddTicks(8780),
                            email = "MariaHelena_Carvalho@yahoo.com",
                            is_active = true,
                            name = "Ana Clara Moreira",
                            password = "$2a$11$zDE1lEK2G0UPgoBvHNUAje9Nm06ZkWAT4u3C9db3z6rM9ronQmN4a",
                            phone = 36302679445.0
                        },
                        new
                        {
                            id = new Guid("39a7d6d5-7b69-495a-9367-2e27663a9733"),
                            cpf = 99583298832.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 12, 611, DateTimeKind.Local).AddTicks(5055),
                            email = "Pablo.Xavier26@live.com",
                            is_active = true,
                            name = "Liz Reis",
                            password = "$2a$11$ngSGNHAZojOh6HAOc9VvZOl0cf2jPi.SNLKIYSLEYWU1T/NFJAxAq",
                            phone = 46842241881.0
                        },
                        new
                        {
                            id = new Guid("e57af8a1-9a1f-4760-9e06-9629fb0f8844"),
                            cpf = 70453696465.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 12, 728, DateTimeKind.Local).AddTicks(3253),
                            email = "Melissa8@live.com",
                            is_active = true,
                            name = "Gúbio Pereira",
                            password = "$2a$11$21L4450RFTFjC3jFLRUb1uOkQnqmq8uyXA3JnNa3DW.8A9iu9yqYC",
                            phone = 554200548954.0
                        },
                        new
                        {
                            id = new Guid("d534865e-d1d8-4780-ab90-44dbf5e4399e"),
                            cpf = 78886224109.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 12, 845, DateTimeKind.Local).AddTicks(359),
                            email = "Fabricia.Barros44@yahoo.com",
                            is_active = true,
                            name = "Maria Cecília Xavier",
                            password = "$2a$11$uCmUEyKYnHGNkzYhvtmdVug.UVOfUGKvfMX0unz5pji9DC15qINoC",
                            phone = 557848364297.0
                        },
                        new
                        {
                            id = new Guid("489eebd1-b65f-4131-a5cc-5738f25ed6d6"),
                            cpf = 1652733566.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 12, 961, DateTimeKind.Local).AddTicks(6744),
                            email = "MariaClara69@live.com",
                            is_active = true,
                            name = "Lorena Macedo",
                            password = "$2a$11$7.Ryogf8krUXeEknUJ4KQ.aB1.Pz6N/FyGuc0fxb1zBz9J2u/ozOG",
                            phone = 60028949260.0
                        },
                        new
                        {
                            id = new Guid("34ffc11c-3b18-41f9-9e6f-9788567b7d8e"),
                            cpf = 71981610650.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 13, 78, DateTimeKind.Local).AddTicks(3393),
                            email = "Marcos_Xavier@gmail.com",
                            is_active = true,
                            name = "Caio Moreira",
                            password = "$2a$11$86AXQtubtxgOxVXyYFZlwO45vBAytUVYuaHE6YoI8/whMCrQ7qgZm",
                            phone = 93609655442.0
                        },
                        new
                        {
                            id = new Guid("fb841448-84a7-4a54-bd09-b1b79166f9fe"),
                            cpf = 60863356990.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 13, 195, DateTimeKind.Local).AddTicks(1253),
                            email = "Nataniel_Santos@yahoo.com",
                            is_active = true,
                            name = "Gúbio Martins",
                            password = "$2a$11$1lWJ2w71Scxkmz6UnOofaOgCAAovRUuLldJbRDpzgCelv43TMnR3C",
                            phone = 555362650512.0
                        },
                        new
                        {
                            id = new Guid("13d7ec9f-7e75-4fc5-afb5-2ae8dee29417"),
                            cpf = 27194312816.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 13, 311, DateTimeKind.Local).AddTicks(7722),
                            email = "Lorena34@yahoo.com",
                            is_active = true,
                            name = "Miguel Albuquerque",
                            password = "$2a$11$VGsucjFnMEvJUh0HZ6N/4.AMs6UIMl1/VdEdQdICrC.7LDGuCXhgu",
                            phone = 1799511777.0
                        },
                        new
                        {
                            id = new Guid("df2d345b-959f-42c5-b573-c940e10d5abc"),
                            cpf = 81250174961.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 13, 428, DateTimeKind.Local).AddTicks(3669),
                            email = "Gustavo2@live.com",
                            is_active = true,
                            name = "Murilo Reis",
                            password = "$2a$11$/qnyaMYv7rjc6ryltk9GeeHdNze2THMxIdkalREIW4zp4fslmUP9C",
                            phone = 680157182.0
                        },
                        new
                        {
                            id = new Guid("264a9577-e7d7-4324-9d21-cfab5dbf1489"),
                            cpf = 76473744860.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 13, 544, DateTimeKind.Local).AddTicks(9368),
                            email = "Ofelia.Moreira16@gmail.com",
                            is_active = true,
                            name = "Lavínia Moraes",
                            password = "$2a$11$SBaWW2RycXoD5HO0CvW6.uD7JGZVwXYYL/8hf955zc5xPlqnU9Vku",
                            phone = 5402849288.0
                        },
                        new
                        {
                            id = new Guid("e157b04a-2642-4723-b7fb-4a14877c3591"),
                            cpf = 20604856652.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 13, 661, DateTimeKind.Local).AddTicks(5663),
                            email = "Vitoria58@live.com",
                            is_active = true,
                            name = "Sara Barros",
                            password = "$2a$11$NgBBTR5u6L5db/rUpHnrQ.jbI4lRDo31nNnmM1jZUgN34dGIlsVPq",
                            phone = 37581921680.0
                        },
                        new
                        {
                            id = new Guid("604509c3-147f-4b65-9043-69b18b1813f0"),
                            cpf = 7478169139.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 13, 778, DateTimeKind.Local).AddTicks(3068),
                            email = "Isabelly_Martins@bol.com.br",
                            is_active = true,
                            name = "Márcia Silva",
                            password = "$2a$11$yMIWEGWOufHZjmi7iDQ1Q.drBuSNG/zl/xbq74PBfT5HCVDt.i/Vy",
                            phone = 551054306958.0
                        },
                        new
                        {
                            id = new Guid("023f489c-82e4-42cb-bba4-d522a1f9a890"),
                            cpf = 91841563501.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 13, 895, DateTimeKind.Local).AddTicks(4389),
                            email = "Maite_Reis@yahoo.com",
                            is_active = true,
                            name = "Roberto Santos",
                            password = "$2a$11$NYr2Nm6yLVlErYVj8z053uTCvUsR.fPhD0IkhVV01EyqpfdgXNEpK",
                            phone = 31320878897.0
                        },
                        new
                        {
                            id = new Guid("afcdd85c-10ad-45d7-a268-679d741bad66"),
                            cpf = 76289735748.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 14, 12, DateTimeKind.Local).AddTicks(2976),
                            email = "Pablo3@hotmail.com",
                            is_active = true,
                            name = "Alice Barros",
                            password = "$2a$11$BSEyBuVQ/jf5fTgVuEM76Ovyc6wjKpGGBGneu51sUUYDtHt9yZS0y",
                            phone = 8828529928.0
                        },
                        new
                        {
                            id = new Guid("11819b43-15b9-4b10-b98b-699fb95882d7"),
                            cpf = 35022243156.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 14, 129, DateTimeKind.Local).AddTicks(97),
                            email = "Celia97@bol.com.br",
                            is_active = true,
                            name = "Marcela Saraiva",
                            password = "$2a$11$a/ITA.ADoiIj2rFDg4w2Y.gfjNev29.XYNRGsspkWGBURXdPOTWQa",
                            phone = 553231223803.0
                        },
                        new
                        {
                            id = new Guid("19ba5eda-5d83-4954-a980-f3a3eb749721"),
                            cpf = 32200733526.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 14, 245, DateTimeKind.Local).AddTicks(7629),
                            email = "Julio57@bol.com.br",
                            is_active = true,
                            name = "Warley Martins",
                            password = "$2a$11$58MWXSd1j0B/f9TEMjZJ/eYHdvW2ckE.BiGGY0OjoIGHCbpI5FBjW",
                            phone = 551369873242.0
                        },
                        new
                        {
                            id = new Guid("f9e2e7db-4b4b-47c5-83f4-876adb1cac0f"),
                            cpf = 123456789.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 14, 362, DateTimeKind.Local).AddTicks(5078),
                            email = "admin@admin",
                            is_active = true,
                            name = "Admin",
                            password = "$2a$11$RxjWWlJEEJ2eYOuTls70BuSJrPHYkiS/scNLaDILceB/dasgzQt0i",
                            phone = 123456789.0
                        },
                        new
                        {
                            id = new Guid("cf74d782-c506-4fd7-b57a-309dd43753e4"),
                            cpf = 123456789.0,
                            created_at = new DateTime(2024, 6, 1, 10, 49, 14, 479, DateTimeKind.Local).AddTicks(905),
                            email = "professor@preofessor.com",
                            is_active = true,
                            name = "instrutor 1",
                            password = "$2a$11$z.dzTZlNWPyvKwVK8IQDVOZpFXQ.6bbejGP3PEDMFMNlCz7N9es2O",
                            phone = 123456789.0
                        });
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Video", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("duration")
                        .HasColumnType("text")
                        .HasColumnName("duration");

                    b.Property<Guid>("moduleId")
                        .HasColumnType("uuid")
                        .HasColumnName("module_id");

                    b.Property<int>("order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<string>("title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("videoUrl")
                        .HasColumnType("text")
                        .HasColumnName("video_url");

                    b.HasKey("id")
                        .HasName("pk_videos");

                    b.HasIndex("moduleId")
                        .HasDatabaseName("ix_videos_module_id");

                    b.ToTable("videos", (string)null);
                });

            modelBuilder.Entity("ModuleProgress", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("courseProgressId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_progress_id");

                    b.Property<bool>("done")
                        .HasColumnType("boolean")
                        .HasColumnName("done");

                    b.Property<Guid>("moduleId")
                        .HasColumnType("uuid")
                        .HasColumnName("module_id");

                    b.HasKey("id")
                        .HasName("pk_modules_progress");

                    b.HasIndex("courseProgressId")
                        .HasDatabaseName("ix_modules_progress_course_progress_id");

                    b.HasIndex("moduleId")
                        .HasDatabaseName("ix_modules_progress_module_id");

                    b.ToTable("modules_progress", (string)null);
                });

            modelBuilder.Entity("VideoProgress", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("done")
                        .HasColumnType("boolean")
                        .HasColumnName("done");

                    b.Property<Guid>("moduleId")
                        .HasColumnType("uuid")
                        .HasColumnName("module_id");

                    b.Property<Guid>("videoId")
                        .HasColumnType("uuid")
                        .HasColumnName("video_id");

                    b.HasKey("id")
                        .HasName("pk_video_progresses");

                    b.HasIndex("moduleId")
                        .HasDatabaseName("ix_video_progresses_module_id");

                    b.HasIndex("videoId")
                        .HasDatabaseName("ix_video_progresses_video_id");

                    b.ToTable("video_progresses", (string)null);
                });

            modelBuilder.Entity("CourseProgress", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_progresses_courses_course_id");

                    b.HasOne("GenericCourses.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_progresses_users_user_id");

                    b.Navigation("Course");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Admin", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_admins_users_user_id");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.BlogPost", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Instructor", "instructor")
                        .WithMany("posts")
                        .HasForeignKey("instructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_blog_posts_instructors_instructor_id");

                    b.Navigation("instructor");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Certificate", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Course", "course")
                        .WithMany()
                        .HasForeignKey("courseId")
                        .HasConstraintName("fk_certificates_courses_course_id");

                    b.HasOne("GenericCourses.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_certificates_users_user_id");

                    b.Navigation("course");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Client", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Subscriptionplan", "subscriptionplan")
                        .WithMany("clients")
                        .HasForeignKey("subscriptionplanId")
                        .HasConstraintName("fk_clients_subscription_plans_subscriptionplan_id");

                    b.HasOne("GenericCourses.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_clients_users_user_id");

                    b.Navigation("subscriptionplan");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Comment", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.BlogPost", "blogPost")
                        .WithMany("comments")
                        .HasForeignKey("blogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comments_blog_posts_blog_post_id");

                    b.Navigation("blogPost");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Course", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Instructor", "instructor")
                        .WithMany()
                        .HasForeignKey("instructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_courses_instructors_instructor_id");

                    b.Navigation("instructor");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.CourseCategory", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_ategories_categories_category_id");

                    b.HasOne("GenericCourses.Domain.Entities.Course", "course")
                        .WithMany("courseCategories")
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_ategories_courses_course_id");

                    b.Navigation("category");

                    b.Navigation("course");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Instructor", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_instructors_users_user_id");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Module", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Course", null)
                        .WithMany("modules")
                        .HasForeignKey("Courseid")
                        .HasConstraintName("fk_modules_courses_courseid");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.PostCategory", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.BlogPost", "blogPost")
                        .WithMany("postCategories")
                        .HasForeignKey("blogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_post_categories_blog_posts_blog_post_id");

                    b.HasOne("GenericCourses.Domain.Entities.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_post_categories_categories_category_id");

                    b.Navigation("blogPost");

                    b.Navigation("category");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Review", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Client", "client")
                        .WithMany("reviews")
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_clients_client_id");

                    b.HasOne("GenericCourses.Domain.Entities.Course", "course")
                        .WithMany("reviews")
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_courses_course_id");

                    b.Navigation("client");

                    b.Navigation("course");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Video", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Module", null)
                        .WithMany("videos")
                        .HasForeignKey("moduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_videos_modules_module_id");
                });

            modelBuilder.Entity("ModuleProgress", b =>
                {
                    b.HasOne("CourseProgress", "course_progress")
                        .WithMany()
                        .HasForeignKey("courseProgressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_modules_progress_course_progresses_course_progress_id");

                    b.HasOne("GenericCourses.Domain.Entities.Module", "module")
                        .WithMany()
                        .HasForeignKey("moduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_modules_progress_modules_module_id");

                    b.Navigation("course_progress");

                    b.Navigation("module");
                });

            modelBuilder.Entity("VideoProgress", b =>
                {
                    b.HasOne("GenericCourses.Domain.Entities.Module", "module")
                        .WithMany()
                        .HasForeignKey("moduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_video_progresses_modules_module_id");

                    b.HasOne("GenericCourses.Domain.Entities.Video", "video")
                        .WithMany()
                        .HasForeignKey("videoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_video_progresses_videos_video_id");

                    b.Navigation("module");

                    b.Navigation("video");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.BlogPost", b =>
                {
                    b.Navigation("comments");

                    b.Navigation("postCategories");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Client", b =>
                {
                    b.Navigation("reviews");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Course", b =>
                {
                    b.Navigation("courseCategories");

                    b.Navigation("modules");

                    b.Navigation("reviews");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Instructor", b =>
                {
                    b.Navigation("posts");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Module", b =>
                {
                    b.Navigation("videos");
                });

            modelBuilder.Entity("GenericCourses.Domain.Entities.Subscriptionplan", b =>
                {
                    b.Navigation("clients");
                });
#pragma warning restore 612, 618
        }
    }
}
